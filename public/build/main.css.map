{
  "version": 3,
  "file": "main.css",
  "sources": [
    "..\\..\\DtpPopupDps.svelte",
    "..\\..\\DtpPopupEvnt.svelte",
    "..\\..\\DtpPopupGibdd.svelte",
    "..\\..\\DtpPopupGibddRub.svelte",
    "..\\..\\DtpPopupHearths.svelte",
    "..\\..\\DtpPopupRub.svelte",
    "..\\..\\DtpPopupRub1.svelte",
    "..\\..\\DtpPopupSkpdi.svelte",
    "..\\..\\DtpPopupVerifyed.svelte",
    "..\\..\\DtpVerifyedFilters.svelte",
    "..\\..\\MeasuresPopup.svelte",
    "..\\..\\Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let prp = {};\n\tlet current = 0;\n\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\n    const onClick = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tarr = /tab (\\d)/.exec(target.className),\n\t\t\tnm = arr && arr.length === 2 ? arr[1] : 0,\n\t\t\tprn = target.parentNode;\n\t\t\t\n\t\tfor (let i = 0, len = prn.childNodes.length; i < len; i++) {\n\t\t\tlet node = prn.childNodes[i];\n\t\t\tif (node.classList) {\n\t\t\t\tlet active = node.classList.contains(nm);\n\t\t\t\tif (node.tagName === 'BUTTON') {\n\t\t\t\t\tnode.classList[active ? 'add' : 'remove']('active');\n\t\t\t\t} else if (node.tagName === 'TABLE') {\n\t\t\t\t\tnode.classList[active ? 'remove' : 'add']('hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// let target = ev.target.classList.remove\n// console.log('setComplex ', prn.childNodes);\n\t};\n\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">{prp.title}</div><br>\n\t\t<div class=\"address\">{prp.address}<br>{prp.contact}</div>\n\t</div>\n\n<style>\n\n.hidden {\n\tdisplay: none;\n}\n\n.mvsPopup .address {\n    margin: 14px;\n    font-weight: 200;\n}\n.mvsPopup .tabs {\n    padding-top: 16px;\n}\n.mvsPopup .tab.active {\n    color: red;\n}\n.mvsPopup .tab {\n    color: #1890ff;\n    font-weight: 500;\n\tmargin: 0px 10px 4px 0;\n    padding: 8px 6px;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n}\n\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\nspan.link {\n    cursor: pointer;\n    color: blue;\n    display: block;\n    margin-top: 6px;\n}\n.mvsPopup {\n    min-width: 260px;\n}\n.mvsPopup li {\n    cursor: pointer;\n}\n.mvsPopup .table {\n    width: 100%;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\texport let prp;\n\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\tlet coords = prp.coords[0] || {lat: prp.lat, lon: prp.lon};\n    const getDate = (time) => {\n\t\tif (!time) { return ''; }\n\t\tlet d = new Date(time * 1000);\n\t\treturn d.toLocaleDateString() + ' ' + d.toLocaleTimeString();\n\t};\n\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">Мероприятие<br />({prp.kind || ''})</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Тип мероприятия:</td>\n\t\t\t  <td>{prp.type || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID:</td>\n\t\t\t  <td>{prp.id || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Статус:</td>\n\t\t\t  <td>{prp.status || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата добавления:</td>\n\t\t\t  <td>{getDate(prp.date_created)}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата завершения:</td>\n\t\t\t  <td>{getDate(prp.date_finish_fact)}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{coords.lat} {coords.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID ДТП СКПДИ:</td>\n\t\t\t  <td>{prp.id_dtp || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Описание:</td>\n\t\t\t  <td>{prp.description || ''}</td>\n\t\t\t</tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t</div>\n\n<style>\n\n.hidden {\n\tdisplay: none;\n}\n\n.mvsPopup .address {\n    margin: 14px;\n    font-weight: 200;\n}\n.mvsPopup .tabs {\n    padding-top: 16px;\n}\n.mvsPopup .tab.active {\n    color: red;\n}\n.mvsPopup .tab {\n    color: #1890ff;\n    font-weight: 500;\n\tmargin: 0px 10px 4px 0;\n    padding: 8px 6px;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n}\n\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\nspan.link {\n    cursor: pointer;\n    color: blue;\n    display: block;\n    margin-top: 6px;\n}\n.mvsPopup {\n    min-width: 260px;\n}\n.mvsPopup li {\n    cursor: pointer;\n}\n.mvsPopup .table {\n    width: 100%;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport { afterUpdate } from 'svelte';\n\timport Modal from './Modal.svelte';\n\timport DtpPopup from './DtpPopupDps.svelte';\n\timport DtpPopupEvnt from './DtpPopupEvnt.svelte';\n\n\texport let showModal = false;\n\n\texport let prp;\n\tlet modal;\n\n\tlet disabled = prp.skpdiFiles ? '' : 'disabled';\n\tlet gpsCont;\n\tlet evnCont;\n   const showEvn = (ev) => {\n\t\tlet id = ev.target.value;\n\t\tevnCont.innerHTML = '';\n\n\t\tlet url = 'https://dtp.mvs.group/scripts/events_dev/get_event_id_' + id + '.txt';\n\t\tfetch(url, {})\n\t\t\t.then(req => req.json())\n\t\t\t.then(json => {\n\t\t\t\tconst app = new DtpPopupEvnt({\n\t\t\t\t\ttarget: evnCont,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tprp: json[0]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t};\n\n\tafterUpdate(() => {\n\t\t// console.log('the component just updated', showModal, modal);\n\t\tif (showModal) {\n\t\t\tmodal = new Modal({\n\t\t\t\ttarget: document.body,\n\t\t\t\tprops: {\n\t\t\t\t\tdata: prp.skpdiFiles\n\t\t\t\t}\n\t\t\t});\n\t\t\tmodal.$on('close', (ev) => {\n\t\t\t\tmodal.$destroy();\n\t\t\t\tshowModal = false;\n\t\t\t});\n\t\t}\n\t});\n    const showBat = (ev) => {\n\t\tlet id = ev.target.value;\nconsole.log('showBat', ev.target.value)\n\t\tgpsCont.innerHTML = '';\n\n\t\tlet url = 'https://dtp.mvs.group/scripts/regiments_dev/get_plk_id' + id + '.txt';\n\t\t// let url = 'https://dtp.mvs.group/scripts/rubez_dev/rubez-complex-' + id + '.txt';\n\t\tfetch(url, {})\n\t\t\t.then(req => req.json())\n\t\t\t.then(json => {\n\t// console.log('bindPopup', layer, json, DtpPopup);\n\t\t\t\tconst app = new DtpPopup({\n\t\t\t\t\ttarget: gpsCont,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tprp: json[0]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n/*\n*/\n\t};\n\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\tconst tsInfoArr = (prp.tsInfo || []).map(it => {\n\t\tlet ts_uch = it.ts_uch || [];\n\t\treturn {\n\t\t\tts: it.ts !== 'Осталось на месте ДТП' ? it.ts : '',\n\t\t\tarr: ts_uch.map(pt => {\n\t\t\t\treturn {\n\t\t\t\t\tk_uch: pt.k_uch || '',\n\t\t\t\t\tnpdd: pt.npdd !== 'Нет нарушений' ? pt.npdd : '',\n\t\t\t\t\tsop_npdd: pt.sop_npdd !== 'Нет нарушений' ? pt.sop_npdd : ''\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\t});\n//console.log('ddddd', prp)\n\n</script>\n\n\t  <div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">\n\t\t  <b>{prp.name || prp.dtvp || ''}</b>\n\t\t</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID:</td>\n\t\t\t  <td>{prp.sid || prp.id_stat || prp.id_skpdi || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Адрес:</td>\n\t\t\t  <td>{prp.district || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дорога:</td>\n\t\t\t  <td>{prp.dor || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Населенный пункт:</td>\n\t\t\t  <td>{prp.name_city || 'вне населенного пункта'}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Пикетаж:</td>\n\t\t\t  <td><b>{prp.km || 0}</b> км. <b>{prp.m || 0}</b> м.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{prp.lat} {prp.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата/время:</td>\n\t\t\t  <td>{prp.collision_date || prp.dtp_date || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Вид ДТП:</td>\n\t\t\t  <td>{prp.dtvp || ''}</td>\n\t\t\t</tr>\n            <tr>\n              <td class=\"first\">Нарушения:</td>\n              <td>\n\t\t\t\t<ul>\n\t\t\t\t\t{#each tsInfoArr as pt}\n\t\t\t\t\t\t{#if pt.ts}<li>{pt.ts}</li>{/if}\n\t\t\t\t\t\t{#each pt.arr as pt1}\n\t\t\t\t\t\t\t{#if pt1.k_uch && (pt1.npdd || pt1.sop_npdd)}<li>{pt1.k_uch}</li>{/if}\n\t\t\t\t\t\t\t{#if pt1.npdd}<li>{pt1.npdd}</li>{/if}\n\t\t\t\t\t\t\t{#if pt1.sop_npdd}<li>{pt1.sop_npdd}</li>{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t{/each}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\">Условия:</td>\n              <td>\n\t\t\t\t{#if prp.spog}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Погода:</div> <div class=\"sval\">{prp.spog}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.s_pch}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Покрытие:</div> <div class=\"sval\">{prp.s_pch}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.osv}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Освещенность:</div> <div class=\"sval\">{prp.osv}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.ndu}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Иные условия:</div> <div class=\"sval\">{prp.ndu}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\">Количество погибших/раненых:</td>\n              <td><b>{prp.pog}/{prp.ran}</b></td>\n            </tr>\n            <tr>\n              <td class=\"first\" colspan=2>\n\t\t<div class=\"win leaflet-popup-content-wrapper hidden\" bind:this={gpsCont}></div>\n\t\t\t\t<ul>\n\t\t\t{#each (prp.dps_plk || []) as pt1}\n\t\t\t\t<li class=\"link\" on:click={showBat} value={pt1}>батальон ДПС</li>\n\t\t\t{/each}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\" colspan=2>\n\t\t<div class=\"win leaflet-popup-content-wrapper hidden\" bind:this={evnCont}></div>\n\t\t\t\t<ul>\n\t\t\t{#each (prp.event_list || []) as pt1}\n\t\t\t\t<li class=\"link\" on:click={showEvn} value={pt1}>Мероприятие</li>\n\t\t\t{/each}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t  </div>\n\n<style>\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\n.hidden {\n\tdisplay: none;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n\n.mvsPopup .featureCont .first .link {\n    cursor: pointer;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport DtpPopup from './DtpPopupRub.svelte';\n\timport { afterUpdate } from 'svelte';\n\timport Modal from './Modal.svelte';\n\n\texport let showModal = false;\n\n\texport let prp;\n\tlet modal;\n\n\tlet disabled = prp.skpdiFiles ? '' : 'disabled';\n\tlet rubCont;\n\n\tafterUpdate(() => {\n\t\t// console.log('the component just updated', showModal, modal);\n\t\tif (showModal) {\n\t\t\tmodal = new Modal({\n\t\t\t\ttarget: document.body,\n\t\t\t\tprops: {\n\t\t\t\t\tdata: prp.skpdiFiles\n\t\t\t\t}\n\t\t\t});\n\t\t\tmodal.$on('close', (ev) => {\n\t\t\t\tmodal.$destroy();\n\t\t\t\tshowModal = false;\n\t\t\t});\n\t\t}\n\t});\n    const showRub = (ev) => {\n\t\tlet id = ev.target.value;\nconsole.log('showRub', ev.target.value)\n\n\t\trubCont.innerHTML = '';\n\t\tlet url = 'https://dtp.mvs.group/scripts/rubez_dev/rubez-complex-' + id + '.txt';\n\t\tfetch(url, {})\n\t\t\t.then(req => req.json())\n\t\t\t.then(json => {\n\t// console.log('bindPopup', layer, json, DtpPopup);\n\t\t\t\tconst app = new DtpPopup({\n\t\t\t\t\ttarget: rubCont,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tprp: json[0]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t};\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\tconst tsInfoArr = (prp.tsInfo || []).map(it => {\n\t\tlet ts_uch = it.ts_uch || [];\n\t\treturn {\n\t\t\tts: it.ts !== 'Осталось на месте ДТП' ? it.ts : '',\n\t\t\tarr: ts_uch.map(pt => {\n\t\t\t\treturn {\n\t\t\t\t\tk_uch: pt.k_uch || '',\n\t\t\t\t\tnpdd: pt.npdd !== 'Нет нарушений' ? pt.npdd : '',\n\t\t\t\t\tsop_npdd: pt.sop_npdd !== 'Нет нарушений' ? pt.sop_npdd : ''\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\t});\nconsole.log('ddddd', prp)\n\n</script>\n\n\t  <div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">\n\t\t  <b>{prp.name || prp.dtvp || ''}</b>\n\t\t</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID:</td>\n\t\t\t  <td>{prp.sid || prp.id_stat || prp.id_skpdi || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Адрес:</td>\n\t\t\t  <td>{prp.district || ''} {prp.dor || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Пикетаж:</td>\n\t\t\t  <td><b>{prp.km || 0}</b> км. <b>{prp.m || 0}</b> м.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{prp.lat} {prp.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата/время:</td>\n\t\t\t  <td>{prp.collision_date || prp.dtp_date || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Вид ДТП:</td>\n\t\t\t  <td>{prp.dtvp || ''}</td>\n\t\t\t</tr>\n            <tr>\n              <td class=\"first\">Нарушения:</td>\n              <td>\n\t\t\t\t<ul>\n\t\t\t\t\t{#each tsInfoArr as pt}\n\t\t\t\t\t\t{#if pt.ts}<li>{pt.ts}</li>{/if}\n\t\t\t\t\t\t{#each pt.arr as pt1}\n\t\t\t\t\t\t\t{#if pt1.k_uch && (pt1.npdd || pt1.sop_npdd)}<li>{pt1.k_uch}</li>{/if}\n\t\t\t\t\t\t\t{#if pt1.npdd}<li>{pt1.npdd}</li>{/if}\n\t\t\t\t\t\t\t{#if pt1.sop_npdd}<li>{pt1.sop_npdd}</li>{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t{/each}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\">Условия:</td>\n              <td>\n\t\t\t\t{#if prp.spog}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Погода:</div> <div class=\"sval\">{prp.spog}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.s_pch}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Покрытие:</div> <div class=\"sval\">{prp.s_pch}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.osv}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Освещенность:</div> <div class=\"sval\">{prp.osv}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.ndu}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"stitle\">Иные условия:</div> <div class=\"sval\">{prp.ndu}</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\">Количество погибших/раненых:</td>\n              <td><b>{prp.pog}/{prp.ran}</b></td>\n            </tr>\n            <tr>\n              <td class=\"first\">Рубежи:</td>\n              <td>\n\t\t<div class=\"win leaflet-popup-content-wrapper \" bind:this={rubCont}></div>\n\t\t\t\t<ul>\n\t\t\t\t\t{#each (prp.list_rub || []) as pt, index}\n\t\t\t\t\t\t<li class=\"link\" on:click={showRub} value={pt.line_id}>{pt.line_id} ({pt.range} м.)</li>\n\t\t\t\t\t{/each}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t  </div>\n\n<style>\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.link {\n\tcursor: pointer;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport DtpPopup from './DtpPopupVerifyed.svelte';\n\timport DtpPopupEvnt from './DtpPopupEvnt.svelte';\n\texport let prp;\n\texport let predochag;\n\tlet current;\n\n    const moveTo = (nm) => {\n\t\tlet obj = prp._bounds.options.items[nm];\n\t\tif (obj && obj._map) {\n\t\t\tobj._map.panTo(obj._latlng);\n\t\t}\n\t};\n\tlet evnCont;\n\tconst showEvn = (ev) => {\n\t\tlet id = ev.target.getAttribute('data');\n\t\tevnCont.innerHTML = '';\n\n\t\tlet url = 'https://dtp.mvs.group/scripts/events_dev/get_event_id_' + id + '.txt';\n\t\tfetch(url, {})\n\t\t\t.then(req => req.json())\n\t\t\t.then(json => {\n\t\t\t\tevnCont.classList.remove('hidden');\n\t\t\t\tconst app = new DtpPopupEvnt({\n\t\t\t\t\ttarget: evnCont,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tprp: json[0]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t};\n// console.log('prp ', prp);\n\n    const showDtpInfo = (ev) => {\nconsole.log('showDtpInfo ', ev);\n\t};\n\tlet city = 'city' in prp ? ' (city: ' + prp.city + ')' : '';\n\tlet event_h = prp.event_h && prp.event_h.length > 1 ? prp.event_h : null; \n\tlet event_lo = prp.event_lo && prp.event_lo.length > 1 ? prp.event_lo : null; \n\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">{predochag ? 'Предочаг' : 'Очаг'} ДТП (id: {prp.id || prp.id_hearth}){city}</div>\n\t\t<div class=\"pLine\">{prp.quarter ? prp.quarter + ' кв.': ''} {prp.year}г.</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t\t{#if prp.piketaj_start_km}\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Пикетаж:</td>\n\t\t\t  <td>От: <b>{prp.piketaj_start_km || 0}</b> км. до: <b>{prp.piketaj_finish_km || 0}</b> км.</td>\n\t\t\t</tr>\n\t\t\t\t{/if}\n\t\t\t\t{#if prp.str_icon_type}\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Тип ДТП:</td>\n\t\t\t  <td>{prp.str_icon_type || ''}</td>\n\t\t\t</tr>\n\t\t\t\t{/if}\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Всего ДТП:</td>\n\t\t\t  <td>{prp.list_dtp.length}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Погибших:</td>\n\t\t\t  <td>{prp.count_lost}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Раненых:</td>\n\t\t\t  <td>{prp.count_stricken}</td>\n\t\t\t</tr>\n\t\t\t\t{#each prp.list_dtp as pt1, index}\n\t\t\t<tr>\n\t\t\t  <td class=\"first\" colspan=2>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Пикетаж: {Math.floor(pt1.piketaj_m / 1000)} км. {pt1.piketaj_m % 1000} м.</li>\n\t\t\t\t\t<li on:click={() => {moveTo(index);}} title={'id: ' + pt1.id}>{new Date(1000 * pt1.date).toLocaleDateString()} погибших {pt1.lost}, раненых {pt1.stricken}</li>\n\t\t\t\t\t\n\t\t\t\t</ul>\n\t\t\t  </td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Адрес:</td>\n\t\t\t  <td>{pt1.address}<br /><span class=\"link\" on:click={() => {current = index;}}>подробнее</span>\n\t\t\t\t{#if current === index}\n\t\t\t\t<div class=\"win leaflet-popup-content-wrapper \">\n\t\t\t\t\t<DtpPopup prp={pt1} closeMe={() => {current = null;}} />\n\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t  </td>\n\t\t\t</tr>\n\t\t\t\t{/each}\n            <tr>\n              <td class=\"first\" colspan=2>\n\t\t<div class=\"win leaflet-popup-content-wrapper hidden\" bind:this={evnCont}></div>\n\t\t\t  </td>\n            </tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t\t<div class=\"events\">\n\t\t\t{#if event_h}\n\t\t\t<div class=\"event_h\">\n\t\t\t\t<div class=\"title\">Привязанные мероприятия</div>\n\t\t\t\t<ol start=\"1\">\n\t\t\t\t{#each event_h as pt1}\n\t\t\t\t\t<li class=\"link\" on:click={showEvn} data={pt1.id_event}>Мероприятие</li>\n\t\t\t\t{/each}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t\t{#if event_lo}\n\t\t\t<div class=\"event_lo\">\n\t\t\t\t<div class=\"title\">Мероприятия в районе очага</div>\n\t\t\t\t<ol start=\"1\">\n\t\t\t\t{#each event_lo as pt1}\n\t\t\t\t\t<li class=\"link\" on:click={showEvn} data={pt1.id_event}>Мероприятие</li>\n\t\t\t\t{/each}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t</div>\n\n<style>\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\nspan.link {\n    cursor: pointer;\n    color: blue;\n    display: block;\n    margin-top: 6px;\n}\n.mvsPopup {\n    min-width: 260px;\n}\n.mvsPopup li {\n    cursor: pointer;\n}\n.mvsPopup .table {\n    width: 100%;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\texport let prp;\n\tlet current = 0;\n\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\n    const onClick = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tarr = /tab (\\d)/.exec(target.className),\n\t\t\tnm = arr && arr.length === 2 ? arr[1] : 0,\n\t\t\tprn = target.parentNode;\n\t\t\t\n\t\tfor (let i = 0, len = prn.childNodes.length; i < len; i++) {\n\t\t\tlet node = prn.childNodes[i];\n\t\t\tif (node.classList) {\n\t\t\t\tlet active = node.classList.contains(nm);\n\t\t\t\tif (node.tagName === 'BUTTON') {\n\t\t\t\t\tnode.classList[active ? 'add' : 'remove']('active');\n\t\t\t\t} else if (node.tagName === 'TABLE') {\n\t\t\t\t\tnode.classList[active ? 'remove' : 'add']('hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// let target = ev.target.classList.remove\n// console.log('setComplex ', prn.childNodes);\n\t};\n\tlet complexes = prp && prp.list_complex ? prp.list_complex : [];\nconsole.log('complexes ', complexes);\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">Рубеж (id: {prp.id || prp.line_id})</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Этап:</td>\n\t\t\t  <td>{prp.stage_name || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дорога:</td>\n\t\t\t  <td>{prp.road_name || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{prp.lat} {prp.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Адрес:</td>\n\t\t\t  <td>{prp.address || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Комплексов:</td>\n\t\t\t  <td>{complexes.length}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"tabs\" colspan=2>\n\t\t\t\t{#each complexes as pt1, index}\n\t\t\t\t\t<button class=\"tab {index} {index === 0 ? 'active' : ''}\" on:click={onClick}>{pt1.complex_name}</button>\n\t\t\t\t{/each}\n\t\t\t\t{#each complexes as pt1, index}\n\t\t\t\t\t<table class=\"tabCont {index} {index === 0 ? '' : 'hidden'}\">\n\t\t\t\t\t\t<tr><td class=\"first\">Комплекс:</td><td>{pt1.complex_name} (id: {pt1.complex_sid})</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Модель:</td><td>{pt1.complex_model_name}</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Тип:</td><td>{pt1.complex_type_name}</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Работоспособность:</td><td>{pt1.cafap_status || ''}</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t{/each}\n\t\t\t  </td>\n\t\t\t</tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t</div>\n\n<style>\n\n.hidden {\n\tdisplay: none;\n}\n\n.mvsPopup .tabCont {\n\tmargin-top: 22px;\n    border: 1px solid;\n    width: 100%;\n}\n.mvsPopup .tabs {\n    padding-top: 16px;\n}\n.mvsPopup .tab.active {\n    color: red;\n}\n.mvsPopup .tab {\n    color: #1890ff;\n    font-weight: 500;\n\tmargin: 0px 10px 4px 0;\n    padding: 8px 6px;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n}\n\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\nspan.link {\n    cursor: pointer;\n    color: blue;\n    display: block;\n    margin-top: 6px;\n}\n.mvsPopup {\n    min-width: 260px;\n}\n.mvsPopup li {\n    cursor: pointer;\n}\n.mvsPopup .table {\n    width: 100%;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport DtpPopup from './DtpPopupVerifyed.svelte';\n\texport let prp;\n\tlet current = 0;\n\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\n    const onClick = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tarr = /tab (\\d)/.exec(target.className),\n\t\t\tnm = arr && arr.length === 2 ? arr[1] : 0,\n\t\t\tprn = target.parentNode;\n\t\t\t\n\t\tfor (let i = 0, len = prn.childNodes.length; i < len; i++) {\n\t\t\tlet node = prn.childNodes[i];\n\t\t\tif (node.classList) {\n\t\t\t\tlet active = node.classList.contains(nm);\n\t\t\t\tif (node.tagName === 'BUTTON') {\n\t\t\t\t\tnode.classList[active ? 'add' : 'remove']('active');\n\t\t\t\t} else if (node.tagName === 'TABLE') {\n\t\t\t\t\tnode.classList[active ? 'remove' : 'add']('hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// let target = ev.target.classList.remove\n// console.log('setComplex ', prn.childNodes);\n\t};\n\tlet complexes = prp && prp.complexes ? prp.complexes : [];\nconsole.log('complexes ', complexes);\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">Рубеж (id: {prp.id || prp.lineSid})</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дорога:</td>\n\t\t\t  <td>{prp.roadName || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{prp.lat} {prp.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Адрес:</td>\n\t\t\t  <td>{prp.lineAddress || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Комплексов:</td>\n\t\t\t  <td>{complexes.length}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"tabs\" colspan=2>\n\t\t\t\t{#each complexes as pt1, index}\n\t\t\t\t\t<button class=\"tab {index} {index === 0 ? 'active' : ''}\" on:click={onClick}>{pt1.complexName}</button>\n\t\t\t\t{/each}\n\t\t\t\t{#each complexes as pt1, index}\n\t\t\t\t\t<table class=\"tabCont {index} {index === 0 ? '' : 'hidden'}\">\n\t\t\t\t\t\t<tr><td class=\"first\">Комплекс:</td><td>{pt1.complexName} (id: {pt1.complexSid})</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Модель:</td><td>{pt1.complexModelName}</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Тип:</td><td>{pt1.complexTypeName}</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Этап:</td><td>{pt1.complexStageName}</td></tr>\n\t\t\t\t\t\t<tr><td class=\"first\">Работоспособность:</td><td>{pt1.kvfStatus || ''}</td></tr>\n\t\t\t\t\t\t<!-- tr><td class=\"first\">Координаты:</td><td>{prp.lat} {prp.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td></tr -->\n\t\t\t\t\t\t<tr><td class=\"first\">Дорога:</td><td>{pt1.roadName || prp.roadName || ''}</td></tr>\n\t\t\t\t\t</table>\n\t\t\t\t{/each}\n\t\t\t  </td>\n\t\t\t</tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t</div>\n\n<style>\n\n.hidden {\n\tdisplay: none;\n}\n\n.mvsPopup .tabCont {\n\tmargin-top: 22px;\n    border: 1px solid;\n    width: 100%;\n}\n.mvsPopup .tabs {\n    padding-top: 16px;\n}\n.mvsPopup .tab.active {\n    color: red;\n}\n.mvsPopup .tab {\n    color: #1890ff;\n    font-weight: 500;\n\tmargin: 0px 10px 4px 0;\n    padding: 8px 6px;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n}\n\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\nspan.link {\n    cursor: pointer;\n    color: blue;\n    display: block;\n    margin-top: 6px;\n}\n.mvsPopup {\n    min-width: 260px;\n}\n.mvsPopup li {\n    cursor: pointer;\n}\n.mvsPopup .table {\n    width: 100%;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport { afterUpdate } from 'svelte';\n\timport Modal from './Modal.svelte';\n\timport DtpPopup from './DtpPopupEvnt.svelte';\n\n\texport let showModal = false;\n\n\texport let prp;\n\tlet modal;\n\n\tlet disabled = prp.files && prp.files.length ? '' : 'disabled';\n\tlet evnCont;\n   const showEvn = (ev) => {\n\t\tlet id = ev.target.value;\n\t\tevnCont.innerHTML = '';\n\n\t\tlet url = 'https://dtp.mvs.group/scripts/events_dev/get_event_id_' + id + '.txt';\n\t\tfetch(url, {})\n\t\t\t.then(req => req.json())\n\t\t\t.then(json => {\n\t\t\t\tconst app = new DtpPopup({\n\t\t\t\t\ttarget: evnCont,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tprp: json[0]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t};\n\n\tafterUpdate(() => {\n\t\t// console.log('the component just updated', showModal, modal);\n\t\tdisabled = prp.files && prp.files.length ? '' : 'disabled';\n\t\tif (showModal) {\n\t\t\tmodal = new Modal({\n\t\t\t\ttarget: document.body,\n\t\t\t\tprops: {\n\t\t\t\t\tdata: prp.files\n\t\t\t\t}\n\t\t\t});\n\t\t\tmodal.$on('close', (ev) => {\n\t\t\t\tmodal.$destroy();\n\t\t\t\tshowModal = false;\n\t\t\t});\n\t\t}\n\t});\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\n</script>\n\n\t  <div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">\n\t\t  <b>{prp.name || prp.dtvp || ''}</b>\n\t\t</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID:</td>\n\t\t\t  <td>{prp.id || prp.id_stat || prp.id_skpdi || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Пикетаж:</td>\n\t\t\t  <td><b>{prp.km || 0}</b> км. <b>{prp.m || 0}</b> м.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Населенный пункт:</td>\n\t\t\t  <td>{prp.name_city || 'вне населенного пункта'}</td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{prp.lat} {prp.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата/время:</td>\n\t\t\t  <td>{prp.collision_date || prp.dtp_date || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td colSpan=\"2\">\n\t\t\t\t<div class=\"first\">Условия ДТП:</div>\n\t\t\t\t<div>{prp.collision_context || prp.dtp_date || ''}</div>\n\t\t\t  </td>\n\t\t\t</tr>\n            <tr>\n              <td class=\"first\">Нарушения:</td>\n              <td>\n\t\t\t\t<ul>\n\t\t\t\t\t{#if prp.collisionTypes && prp.collisionTypes.length}\n\t\t\t\t\t{#each prp.collisionTypes as pt}\n\t\t\t\t\t<li>{pt.collisionType || ''}</li>\n\t\t\t\t\t{/each}\n\t\t\t\t\t{/if}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\">Участники:</td>\n              <td>\n\t\t\t\t<ul>\n\t\t\t\t\t{#if prp.uchs && prp.uchs.length}\n\t\t\t\t\t{#each prp.uchs as pt}\n\t\t\t\t\t<li>{pt.collisionPartyCategory || ''} <b><i>({pt.collisionPartyCond || ''})</i></b></li>\n\t\t\t\t\t{/each}\n\t\t\t\t\t{/if}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n            <tr>\n              <td class=\"first\" colspan=2>\n\t\t<div class=\"win leaflet-popup-content-wrapper \" bind:this={evnCont}></div>\n\t\t\t\t<ul>\n\t\t\t{#each (prp.event_list || []) as pt1}\n\t\t\t\t<li class=\"link\" on:click={showEvn} value={pt1}>Мероприятие</li>\n\t\t\t{/each}\n\t\t\t\t</ul>\n\t\t\t  </td>\n            </tr>\n\n\t\t\t<tr>\n\t\t\t  <td class=\"center\" colSpan=\"2\">\n\t\t\t\t<button class=\"primary\" on:click={() => showModal = true} {disabled}>Фото и схемы</button>\n\t\t\t  </td>\n\t\t\t</tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t  </div>\n\n<style>\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n.link {\n    cursor: pointer;\n}\n\n</style>",
    "<script>\n\t// import { afterUpdate } from 'svelte';\n\timport DtpPopupGibdd from './DtpPopupGibdd.svelte';\n\timport DtpPopupSkpdi from './DtpPopupSkpdi.svelte';\n\n\t// export let showModal = false;\n\n\texport let prp;\n\texport let closeMe = () => {};\n\n\tlet curNum = 0;\n\tlet data = {};\n\n    const onclick = (ev) => {\n// console.log('onclick', ev)\n\t\tlet target = ev.target,\n\t\t\tnm = Number(target.value);\n\t\tif (curNum !== nm) {\n\t\t\tcurNum = nm;\n\t\t\tsetPage(curNum);\n\t\t}\n\t};\n    const setPage = (nm) => {\n\t\tlet pt = prp._cur[nm],\n\t\t\ttype = pt.type, \n\t\t\turl = 'https://dtp.mvs.group/scripts/index_dev.php?request=get_dtp_id&id=' + pt.id + '&type=' + type;\n\n\n\t\tfetch(url, {})\n\t\t\t.then(req => req.json())\n\t\t\t.then(json => {\n\t\t\t\tdata = json;\n\t\t\t});\n\n\t};\n\tsetPage(curNum);\n\n\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"close\">\n\t\t\t<a class=\"leaflet-popup-close-button\" href=\"#close\" on:click|preventDefault={closeMe}>×</a>\n\t\t</div>\n\n\t\t<div class=\"pLine\">\n\t\t\t{#each prp._cur as pt, i}\n\t\t\t<button class=\"{curNum === i ? 'current' : ''}\" value={i} on:click={onclick}>{pt.type === 'gibdd' ? 'ГИБДД' : 'СКПДИ'}</button>\n\t\t\t{/each}\n\t\t</div>\n\t\t{#if prp._cur[curNum].type === 'gibdd'}\n\t\t\t<DtpPopupGibdd prp={data} />\n\t\t{:else}\n\t\t\t<DtpPopupSkpdi prp={data} />\n\t\t{/if}\n\t</div>\n\n<style>\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport { onMount } from 'svelte';\n\texport let DtpHearthsPicket4;\n\texport let DtpHearthsSettlements;\n\texport let DtpHearthsPicket;\n\texport let DtpHearths5;\n\texport let DtpHearths3;\n\texport let DtpHearthsStat;\n\texport let DtpHearthsTmp;\n\texport let DtpHearths;\n\texport let DtpVerifyed;\n\texport let DtpSkpdi;\n\texport let DtpGibdd;\n\texport let DtpGibddRub;\n\texport let DtpGibddSpt;\n\texport let DtpGibddLo;\n\texport let DtpHearthsLo;\n\texport let Rub;\n\texport let Measures;\n\texport let control;\n\n\tif (!Measures) { Measures = {}; };\n\tif (!Rub) { Rub = {}; };\n\tif (!DtpGibddRub) { DtpGibddRub = {}; };\n\tif (!DtpHearthsPicket4) { DtpHearthsPicket4 = {}; };\n\tif (!DtpHearthsPicket) { DtpHearthsPicket = {}; };\n\tif (!DtpHearthsSettlements) { DtpHearthsSettlements = {}; };\n\tif (!DtpHearths5) { DtpHearths5 = {}; };\n\tif (!DtpHearths3) { DtpHearths3 = {}; };\n\tif (!DtpHearthsLo) { DtpHearthsLo = {}; };\n\n\tlet currentFilter = 0;\n\tlet currentFilterDtpHearths = 0;\n\tlet begDate;\n\tlet endDate;\n\t// let years = DtpHearths._opt && DtpHearths._opt.years;\n\n\tconst td = new Date();\n\tconst tdd = new Date(new Date(td.getFullYear(), td.getMonth(), td.getDate()).getTime());\n\t// const ed = new Date(tdd.getTime() + 24*60*60*1000);\n\tconst ed = td;\n\t// const bd = new Date(tdd.getTime() - 30*24*60*60*1000);\n\tconst bd = new Date(2019, 0, 1);\n\n\tlet id_dtp = control._id_dtp || null;\n\tlet dateInterval = control._dateInterval || [bd.getTime()/1000, ed.getTime()/1000];\n\tlet optData = DtpVerifyed._opt || {};\n\tlet optCollisionKeys = optData.collision_type ? Object.keys(optData.collision_type).sort((a, b) => optData.collision_type[b] - optData.collision_type[a]) : [];\n // console.log('optData', optData)\n\n\tlet optDataSkpdi = DtpSkpdi._opt || {};\n\tlet optCollisionSkpdiKeys = optDataSkpdi.collision_type ? Object.keys(optDataSkpdi.collision_type).sort((a, b) => optDataSkpdi.collision_type[b] - optDataSkpdi.collision_type[a]) : [];\n\n\tlet optDataGibdd = DtpGibdd._opt || {};\n\tlet optCollisionGibddKeys = optDataGibdd.collision_type ? Object.keys(optDataGibdd.collision_type).sort((a, b) => optDataGibdd.collision_type[b] - optDataGibdd.collision_type[a]) : [];\n\n\tlet optDataGibddSpt = DtpGibddSpt._opt || {};\n\tlet optCollisionGibddSptKeys = optDataGibddSpt.collision_type ? Object.keys(optDataGibddSpt.collision_type).sort((a, b) => optDataGibddSpt.collision_type[b] - optDataGibddSpt.collision_type[a]) : [];\n\tlet optDataGibddLo = DtpGibddLo._opt || {};\n\tlet optCollisionGibddLoKeys = optDataGibddLo.collision_type ? Object.keys(optDataGibddLo.collision_type).sort((a, b) => optDataGibddLo.collision_type[b] - optDataGibddLo.collision_type[a]) : [];\n\n\tlet optDataHearthsLo = (DtpHearthsLo || {})._opt || {};\n\tlet optRoadTypesLo = optDataHearthsLo.road ? Object.keys(optDataHearthsLo.road).sort((a, b) => optDataHearthsLo.road[b] - optDataHearthsLo.road[a]) : [];\n\n\tlet dps = {'Dps1': true, 'Dps0': true};\n\tlet evnt = {'ev1': true, 'ev0': true};\n\n\tlet optDataGibddRub = (DtpGibddRub || {})._opt || {};\n\tlet optCollisionGibddRubKeys = optDataGibddRub.collision_type ? Object.keys(optDataGibddRub.collision_type).sort((a, b) => optDataGibddRub.collision_type[b] - optDataGibddRub.collision_type[a]) : [];\n\n\tlet optDataHearths = (DtpHearths || {})._opt || {};\n\tlet optTypeHearthsKeys = optDataHearths.str_icon_type ? Object.keys(optDataHearths.str_icon_type).sort((a, b) => optDataHearths.str_icon_type[b] - optDataHearths.str_icon_type[a]) : [];\n\n\tlet optDataHearthsTmp = (DtpHearthsTmp || {})._opt || {};\n\tlet optTypeHearthsTmpKeys = optDataHearthsTmp.str_icon_type ? Object.keys(optDataHearthsTmp.str_icon_type).sort((a, b) => optDataHearthsTmp.str_icon_type[b] - optDataHearthsTmp.str_icon_type[a]) : [];\n\n\tlet optDataHearthsStat = (DtpHearthsStat || {})._opt || {};\n\tlet optTypeHearthsStatKeys = optDataHearthsStat.str_icon_type ? Object.keys(optDataHearthsStat.str_icon_type).sort((a, b) => optDataHearthsStat.str_icon_type[b] - optDataHearthsStat.str_icon_type[a]) : [];\n\n\tlet optDataHearths3 = (DtpHearths3 || {})._opt || {};\n\tlet optTypeHearths3Keys = optDataHearths3.str_icon_type ? Object.keys(optDataHearths3.str_icon_type).sort((a, b) => optDataHearths3.str_icon_type[b] - optDataHearths3.str_icon_type[a]) : [];\n\n\tlet optDataHearths5 = (DtpHearths5 || {})._opt || {};\n\tlet optTypeHearths5Keys = optDataHearths5.str_icon_type ? Object.keys(optDataHearths5.str_icon_type).sort((a, b) => optDataHearths5.str_icon_type[b] - optDataHearths5.str_icon_type[a]) : [];\n\n\tlet optDataHearthsSettlements = (DtpHearthsSettlements || {})._opt || {};\n\tlet optRoadTypes5 = optDataHearthsSettlements.road ? Object.keys(optDataHearthsSettlements.road).sort((a, b) => optDataHearthsSettlements.road[b] - optDataHearthsSettlements.road[a]) : [];\n\n\tlet optDataHearthsPicket = (DtpHearthsPicket || {})._opt || {};\n\tlet optRoadTypes = optDataHearthsPicket.road ? Object.keys(optDataHearthsPicket.road).sort((a, b) => optDataHearthsPicket.road[b] - optDataHearthsPicket.road[a]) : [];\n\n\tlet optDataHearthsPicket4 = (DtpHearthsPicket4 || {})._opt || {};\n\tlet optRoadTypes4 = optDataHearthsPicket4.road ? Object.keys(optDataHearthsPicket4.road).sort((a, b) => optDataHearthsPicket4.road[b] - optDataHearthsPicket4.road[a]) : [];\n\n\tlet optMeasures = Measures._opt || {};\n\tlet optMeasuresKeys = optMeasures.type ? Object.keys(optMeasures.type).sort((a, b) => optMeasures.type[b] - optMeasures.type[a]) : [];\n\n\tlet roads = [''];\n\tlet ht = {'hearth3': true, 'hearth5': true};\n\tlet id_hearth = null;\n\n\tlet collision_type = [''];\n\tlet collision_type_skpdi = [''];\n\tlet collision_type_gibdd = [''];\n\tlet collision_type_gibddRub = [''];\n\tlet beg;\n\tlet end;\n\n\tlet heat = {radius: 19, blur: 11.26, minOpacity: 0.34};\n\tlet heatName;\n\tlet radius = heat.radius; // 25;\n\tlet blur = 11.26; // 15;\n\tlet minOpacity = 0.34; // 0.05;\n\tlet heatElement;\n\tlet heatElementDtpGibddLo;\n\tlet heatElementDtpGibddSpt;\n\tlet heatElementDtpGibdd;\n\tlet heatElementDtpSkpdi;\n\tlet heatElementDtpVerifyed;\n\n\tlet isHeatChecked = (DtpGibddRub._map && DtpGibddRub._needHeat) ||\n\t\t(DtpVerifyed._map && DtpVerifyed._needHeat) ||\n\t\t(DtpSkpdi._map && DtpSkpdi._needHeat) ||\n\t\t(DtpGibdd._map && DtpGibdd._needHeat) ||\n\t\t(DtpGibddSpt._map && DtpGibddSpt._needHeat) ||\n\t\t(DtpGibddLo._map && DtpGibddLo._needHeat);\n\n\tlet _comps = Rub && Rub._argFilters ? Rub._argFilters[0] : {type: 'comp', zn: {on: true, off: true}};\n\tlet compOn = _comps.zn.on;\n\tlet comp1On = _comps.zn.off;\n\n\n\tlet measures_type = [];\n    const setFilterMeasures = () => {\n\t\tif (Measures._map) {\n\t\t\tlet opt = [];\n\t\t\tif (measures_type.length) {\n\t\t\t\topt.push({type: 'measures_type', zn: measures_type});\n\t\t\t}\n\t\t\t// if (id_dtp) {\n\t\t\t\t// opt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t// }\n\t\t\tif (dateInterval) {\n\t\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t\t}\n\t\t\tMeasures.setFilter(opt);\n\t\t}\n\t};\n\n\t// const setListRub = (ev) => {\n\t\t// let opt = [{type: 'comp', zn: {on: compOn, off: comp1On}}];\n\t\t// Rub.setFilter(opt);\n\t// };\n\tconst setComp = (ev) => {\n\t\tlet opt = [{type: 'comp', zn: {on: compOn, off: comp1On}}];\n\t\tRub.setFilter(opt);\n\t};\n\n\tlet hearths_year_Settlements = {};\n\tObject.keys(optDataHearthsSettlements.years || {}).sort().forEach(key => {\n\t\thearths_year_Settlements[key] = true;\n\t});\n\tlet city = {0: true, 1: true, 2: true};\n    const setFilterHearthsSettlements = (ev) => {\n\t\tif (DtpHearthsSettlements._map) {\n\t\t\tif (ev) {\n\t\t\t\tlet target = ev.target || {},\n\t\t\t\t\tchecked = target.checked,\n\t\t\t\t\tid = target.id,\n\t\t\t\t\tname = target.name;\n\t\t\t\tif (id !== 'stricken') {\n\t\t\t\t\thearths_year_Settlements[name] = checked;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet opt = [\n\t\t\t\t{type: 'year', zn: hearths_year_Settlements}\n\t\t\t];\n\t\t\tif (city) {\n\t\t\t\topt.push({type: 'city', zn: city});\n\t\t\t}\n\t\t\tif (id_dtp) {\n\t\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t}\n\t\t\tif (id_hearth) {\n\t\t\t\topt.push({type: 'id_hearth', zn: id_hearth});\n\t\t\t}\n\t\t\tif (roads) {\n\t\t\t\topt.push({type: 'roads', zn: roads});\n\t\t\t}\n\t\t\topt.push({type: 'ht', zn: ht});\n\t\t\t// console.log('opt', opt);\n\t\t\tDtpHearthsSettlements.setFilter(opt);\n\t\t}\n\t};\n\n\tlet hearths_year_Lo = {};\n\tObject.keys(optDataHearthsLo.years || {}).sort().forEach(key => {\n\t\thearths_year_Lo[key] = true;\n\t});\n    const setFilterHearthsLo = (ev) => {\n\t\tif (DtpHearthsLo._map) {\n\t\t\tif (ev) {\n\t\t\t\tlet target = ev.target || {},\n\t\t\t\t\tchecked = target.checked,\n\t\t\t\t\tid = target.id,\n\t\t\t\t\tname = target.name;\n\t\t\t\tif (id !== 'stricken') {\n\t\t\t\t\thearths_year_Lo[name] = checked;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet opt = [\n\t\t\t\t{type: 'year', zn: hearths_year_Lo}\n\t\t\t];\n\t\t\tif (id_dtp) {\n\t\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t}\n\t\t\tif (id_hearth) {\n\t\t\t\topt.push({type: 'id_hearth', zn: id_hearth});\n\t\t\t}\n\t\t\tif (roads) {\n\t\t\t\topt.push({type: 'roads', zn: roads});\n\t\t\t}\n\t\t\topt.push({type: 'ht', zn: ht});\n\t\t\tDtpHearthsLo.setFilter(opt);\n\t\t}\n\t};\n\n\tlet hearths_year_Picket = {};\n\tObject.keys(optDataHearthsPicket.years || {}).sort().forEach(key => {\n\t\thearths_year_Picket[key] = true;\n\t});\n    const setFilterHearthsPicket = (ev) => {\n\t\tif (DtpHearthsPicket._map) {\n\t\t\tif (ev) {\n\t\t\t\tlet target = ev.target || {},\n\t\t\t\t\tchecked = target.checked,\n\t\t\t\t\tid = target.id,\n\t\t\t\t\tname = target.name;\n\t\t\t\tif (id !== 'stricken') {\n\t\t\t\t\thearths_year_Picket[name] = checked;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet opt = [\n\t\t\t\t{type: 'year', zn: hearths_year_Picket}\n\t\t\t];\n\t\t\tif (id_dtp) {\n\t\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t}\n\t\t\tif (id_hearth) {\n\t\t\t\topt.push({type: 'id_hearth', zn: id_hearth});\n\t\t\t}\n\t\t\tif (roads) {\n\t\t\t\topt.push({type: 'roads', zn: roads});\n\t\t\t}\n\t\t\topt.push({type: 'ht', zn: ht});\n\t\t\t// console.log('opt', opt);\n\t\t\tDtpHearthsPicket.setFilter(opt);\n\t\t}\n\t};\n\n\tlet hearths_stricken4;\n\tlet hearths_year_Picket4 = {};\n\tObject.keys(optDataHearthsPicket4.years || {}).sort().forEach(key => {\n\t\thearths_year_Picket4[key] = true;\n\t});\n    const setFilterHearthsPicket4 = (ev) => {\n\t\tif (DtpHearthsPicket4._map) {\n\t\t\tif (ev) {\n\t\t\t\tlet target = ev.target || {},\n\t\t\t\t\tchecked = target.checked,\n\t\t\t\t\tid = target.id,\n\t\t\t\t\tname = target.name;\n\t\t\t\tif (id !== 'stricken') {\n\t\t\t\t\t// hearths_stricken4 = \n\t\t\t\t// } else {\n\t\t\t\t\thearths_year_Picket4[name] = checked;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet opt = [];\n\t\t\tif (id_dtp) {\n\t\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t}\n\t\t\tif (hearths_stricken4) {\n\t\t\t\topt.push({type: 'stricken', zn: Number(hearths_stricken4)});\n\t\t\t}\n\t\t\tif (hearths_period_type_Stat === 1) {\n\t\t\t\topt.push({type: 'year', zn: hearths_year_Picket4});\n\t\t\t}\n\t\t\tif (id_hearth) {\n\t\t\t\topt.push({type: 'id_hearth', zn: id_hearth});\n\t\t\t}\n\t\t\tif (roads) {\n\t\t\t\topt.push({type: 'roads', zn: roads});\n\t\t\t}\n\t\t\topt.push({type: 'ht', zn: ht});\n\t\t\t// console.log('opt', opt);\n\t\t\tDtpHearthsPicket4.setFilter(opt);\n\t\t}\n\t};\n\n\tconst refresh = () => {\n\t\tsetFilterHearthsLo();\n\t\tsetFilterHearthsPicket4();\n\t\tsetFilterHearthsSettlements();\n\t\tsetFilterHearthsPicket();\n\t\tsetFilterHearths5({});\n\t\tsetFilterHearths3({});\n\t\tsetFilterHearths({});\n\t\tsetFilterHearthsTmp({});\n\t\tsetFilterHearthsStat({});\n\t\tsetFilterSkpdi();\n\t\tsetFilterGibdd();\n\t\tsetFilterGibddSpt();\n\t\tsetFilterGibddLo();\n\t\tsetFilterGibddRub();\n\t\tsetFilterMeasures();\n\t\tsetFilter();\n\t};\n\n\tconst oncheckIdCity = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tname = target.name;\n\t\tcity[name] = target.checked;\n\t\tcontrol.city = city;\n\t\trefresh();\n\t};\n\tconst oncheckIdDtp = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tvalue = target.value;\n\t\tid_dtp = value ? value : null;\n\t\tcontrol._id_dtp = id_dtp;\n\t\trefresh();\n\t};\n\n\tconst oncheckIdHearth = (ev) => {\n\t\tlet target = ev.target,\n\t\t\tvalue = target.value;\n\t\tid_hearth = value ? value : null;\n\t\tsetFilterHearthsLo();\n\t\tsetFilterHearthsSettlements();\n\t\tsetFilterHearthsPicket();\n\t\tsetFilterHearthsPicket4();\n\t};\n\tconst oncheckHt = (ev) => {\n\t\tlet target = ev.target;\n\t\tht[target.name] = target.checked;\n\t\tsetFilterHearthsLo();\n\t\tsetFilterHearthsSettlements();\n\t\tsetFilterHearthsPicket();\n\t\tsetFilterHearthsPicket4();\n\t};\n\tconst oncheckDps = (ev) => {\n\t\tlet target = ev.target;\n\t\tdps[target.name] = target.checked;\n\t\tsetFilterGibdd();\n\t\t// setFilterGibddSpt();\n\t};\n\tconst oncheckEvents = (ev) => {\n\t\tlet target = ev.target;\n\t\tevnt[target.name] = target.checked;\n\t\tsetFilterGibdd();\n\t\tsetFilterSkpdi();\n\t\t// setFilterGibddSpt();\n\t\tsetFilter();\n\t};\n\n\tconst setHeat = (ev) => {\n\t\tlet target = ev.target;\n\n\t\tDtpGibddRub._needHeat = DtpGibddLo._needHeat = DtpGibddSpt._needHeat = DtpGibdd._needHeat = DtpSkpdi._needHeat = DtpVerifyed._needHeat = target.checked ? heat : false;\n\t\tsetFilterGibddRub();\n\t\tsetFilterGibdd();\n\t\t// DtpSkpdi._needHeat = _needHeat;\n\t\tsetFilterSkpdi();\n\t\t// DtpVerifyed._needHeat = _needHeat;\n\t\tsetFilterGibddSpt();\n\t\tsetFilterGibddLo();\n\t\tsetFilter();\n\t};\n\tconst setMinOpacity = () => {\n\t\tlet opt = {radius: radius, blur: blur, minOpacity: minOpacity};\n\t\tif (DtpGibddLo._heat) {\n\t\t\tDtpGibddLo._heat.setOptions(opt);\n\t\t}\n\t\tif (DtpGibddSpt._heat) {\n\t\t\tDtpGibddSpt._heat.setOptions(opt);\n\t\t}\n\t\tif (DtpGibdd._heat) {\n\t\t\tDtpGibdd._heat.setOptions(opt);\n\t\t}\n\t\tif (DtpSkpdi._heat) {\n\t\t\tDtpSkpdi._heat.setOptions(opt);\n\t\t}\n\t\tif (DtpVerifyed._heat) {\n\t\t\tDtpVerifyed._heat.setOptions(opt);\n\t\t}\n\t};\n\n\tconst setFilter = () => {\n\t\tif (DtpVerifyed._map) {\n\t\t\tlet opt = [\n\t\t\t\t{type: 'evnt', zn: evnt},\n\t\t\t\t{type: 'itemType', zn: currentFilter}\n\t\t\t];\n\t\t\tif (id_dtp) {\n\t\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t}\n\t\t\tif (dateInterval) {\n\t\t\t\tcontrol._dateInterval = dateInterval;\n\t\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t\t}\n\t\t\tif (collision_type) {\n\t\t\t\topt.push({type: 'collision_type', zn: collision_type});\n\t\t\t}\n\t\t\t// console.log('opt', collision_type, opt);\n\t\t\tDtpVerifyed.setFilter(opt);\n\t\t}\n\t};\n\n\tlet _list_rub = DtpGibddRub._argFilters && DtpGibddRub._argFilters.length ? DtpGibddRub._argFilters[0] : {type: 'list_rub', zn: {on: true, off: true}};\n\tlet list_rubOn = _list_rub.zn.on;\n\tlet list_rubOff = _list_rub.zn.off;\n\n    const setFilterGibddRub = () => {\n\t\tif (DtpGibddRub._map) {\n\t\t\tlet opt = [\n\t\t\t\t{type: 'list_rub', zn: {on: list_rubOn, off: list_rubOff}}\n\t\t\t];\n\t\t\tif (id_dtp) {\n\t\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t\t}\n\t\t\tif (dateInterval) {\n\t\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t\t}\n\t\t\tif (collision_type_gibddRub) {\n\t\t\t\topt.push({type: 'collision_type', zn: collision_type_gibddRub});\n\t\t\t}\n\t\t\t// console.log('opt', collision_type, opt);\n\t\t\tDtpGibddRub.setFilter(opt);\n\t\t}\n\t};\n\n    const setFilterGibdd = () => {\n\t\tif (DtpGibdd._map) {\n\t\tlet opt = [\n\t\t\t{type: 'dps', zn: dps},\n\t\t\t{type: 'evnt', zn: evnt}\n\t\t];\n\t\tif (id_dtp) {\n\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\tif (dateInterval) {\n\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t}\n\t\tif (collision_type_gibdd) {\n\t\t\topt.push({type: 'collision_type', zn: collision_type_gibdd});\n\t\t}\n\t\t// console.log('opt', collision_type, opt);\n\t\tDtpGibdd.setFilter(opt);\n\t\t}\n\t};\n\n    const setFilterGibddLo = () => {\n\t\tif (DtpGibddLo._map) {\n\t\tlet opt = [\n\t\t\t// {type: 'dps', zn: dps},\n\t\t\t// {type: 'evnt', zn: evnt}\n\t\t];\n\t\tif (id_dtp) {\n\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\tif (dateInterval) {\n\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t}\n\t\tif (collision_type_gibdd) {\n\t\t\topt.push({type: 'collision_type', zn: collision_type_gibdd});\n\t\t}\n\t\t// console.log('opt', collision_type, opt);\n\t\tDtpGibddLo.setFilter(opt);\n\t\t}\n\t};\n\n    const setFilterGibddSpt = () => {\n\t\tif (DtpGibddSpt._map) {\n\t\tlet opt = [\n\t\t\t// {type: 'dps', zn: dps},\n\t\t\t// {type: 'evnt', zn: evnt}\n\t\t];\n\t\tif (id_dtp) {\n\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\tif (dateInterval) {\n\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t}\n\t\tif (collision_type_gibdd) {\n\t\t\topt.push({type: 'collision_type', zn: collision_type_gibdd});\n\t\t}\n\t\t// console.log('opt', collision_type, opt);\n\t\tDtpGibddSpt.setFilter(opt);\n\t\t}\n\t};\n\n    const setFilterSkpdi = () => {\n\t\tif (DtpSkpdi._map) {\n\t\tlet opt = [\n\t\t\t{type: 'evnt', zn: evnt}\n\t\t];\n\t\tif (id_dtp) {\n\t\t\topt.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\tif (dateInterval) {\n\t\t\topt.push({type: 'date', zn: dateInterval});\n\t\t}\n\t\tif (collision_type_skpdi) {\n\t\t\topt.push({type: 'collision_type', zn: collision_type_skpdi});\n\t\t}\n\t\t// console.log('opt', collision_type, opt);\n\t\tDtpSkpdi.setFilter(opt);\n\t\t}\n\t};\n\n\t// date filter\n    const oncheck = (ev) => {\n\t\tlet target = ev.target;\n\t\tcurrentFilter = Number(target.value);\n\t\t// console.log('oncheck', currentFilter, DtpVerifyed._opt);\n\t\tsetFilter();\n\t\t// DtpVerifyed.setFilter({type: 'itemType', zn: currentFilter});\n\t};\n\t// beforeUpdate(() => {\n\t\t// console.log('the component is about to update', DtpHearths._opt);\n\t// });\n\tonMount(() => {\n\t\t// years = DtpHearths._opt && DtpHearths._opt.years;\n\t\tlet i18n = {\n\t\t\tpreviousMonth : 'Предыдущий месяц',\n\t\t\tnextMonth     : 'Следующий месяц',\n\t\t\tmonths        : ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\n\t\t\tweekdays      : ['Воскресенье','Понедельник','Вторник','Среда','Четверг','Пятница','Суббота'],\n\t\t\tweekdaysShort : ['Вс','Пн','Вт','Ср','Чт','Пт','Сб']\n\t\t};\n\t\tlet opt = {\n\t\t\tonSelect: function(date) {\n\t\t\t\t// console.log('ssssss', date)\n\t\t\t\tthis._o.field.value = this.toString();\n\t\t\t\t// dateInterval[this._o._dint] = this.getDate().getTime()/1000;\n\t\t\t\tdateInterval[this._o._dint] = this.getDate().getTime()/1000 + this._o._dint * 24*60*60;\n\t\t\t\tsetFilter();\n\t\t\t\tsetFilterSkpdi();\n\t\t\t\tsetFilterGibdd();\n\t\t\t\tsetFilterGibddLo();\n\t\t\t\tsetFilterGibddSpt();\n\t\t\t\tsetFilterMeasures();\n\t\t\t\tsetFilterGibddRub();\n\t\t\t},\n\t\t\ttoString(date, format) {\n\t\t\t\t// you should do formatting based on the passed format,\n\t\t\t\t// but we will just return 'D/M/YYYY' for simplicity\n\t\t\t\tlet day = date.getDate();\n\t\t\t\tif (day < 10) { day = '0' + day; }\n\t\t\t\tlet month = date.getMonth() + 1;\n\t\t\t\tif (month < 10) { month = '0' + month; }\n\t\t\t\tconst year = date.getFullYear();\n\t\t\t\treturn `${day}.${month}.${year}`;\n\t\t\t},\n\t\t\tparse(dateString, format) {\n\t\t\t\t// dateString is the result of `toString` method\n\t\t\t\tconst parts = dateString.split('.');\n\t\t\t\tconst day = parseInt(parts[0], 10);\n\t\t\t\tconst month = parseInt(parts[1], 10) - 1;\n\t\t\t\tconst year = parseInt(parts[2], 10);\n\t\t\t\treturn new Date(year, month, day);\n\t\t\t},\n\t\t\t// firstDay: 1,\n\t\t\t// enableSelectionDaysInNextAndPreviousMonths: true,\n\t\t\ti18n: i18n,\n\t\t\tformat: 'DD.MM.YYYY',\n\t\t\t// minDate: new Date(2018, 1, 1),\n\t\t\t// maxDate: new Date(2020, 1, 1),\n\t\t\tsetDefaultDate: true,\n\t\t\tyearRange: 20,\n\t\t\t// keyboardInput: false,\n\t\t\tblurFieldOnSelect: false,\n\t\t\t// ,\n\t\t\t// yearRange: [2000,2020]\n\t\t};\n\t\tbeg = new Pikaday(L.extend({}, opt, {\n\t\t\t_dint: 0,\n\t\t\tfield: begDate,\n\t\t\tdefaultDate: new Date(1000 * dateInterval[0])\n\t\t}));\n\t\t\t\t// console.log('dddd', beg)\n\t\tend = new Pikaday(L.extend({}, opt, {\n\t\t\t_dint: 1,\n\t\t\tfield: endDate,\n\t\t\tdefaultDate: new Date(1000 * dateInterval[1])\n\t\t}));\n\t\t// id_dtp = null;\n\t\trefresh();\n\n\t});\n\tconst onPrev = () => {\n\t\tlet e = end.getDate(),\n\t\t\tb = beg.getDate(),\n\t\t\tms = e - b;\n\n\t\t// if (ms === 0) { b = new Date(b.getTime() - 24*60*60*1000); ms = e - b; }\n\t\tif (ms === 0) { ms = 24*60*60*1000; }\n\t\t// end.setDate(b);\n\t\tbeg.setDate(new Date(b.getTime() - ms));\n\t\tend.setDate(new Date(e.getTime() - ms));\n\t\tdateInterval = [beg.getDate().getTime()/1000, 24*60*60 + end.getDate().getTime()/1000];\n\t\tsetFilter();\n\t\tsetFilterSkpdi();\n\t\tsetFilterGibdd();\n\t\tsetFilterGibddLo();\n\t\tsetFilterGibddSpt();\n\t\tsetFilterGibddRub();\n// console.log('ssssss', dateInterval, beg.getDate(), end.getDate())\n\t};\n\tconst onNext = () => {\n\t\tlet e = end.getDate(),\n\t\t\tb = beg.getDate(),\n\t\t\tms = e - b;\n\n\t\t// if (ms === 0) { e = new Date(b.getTime() + 24*60*60*1000); ms = e - b; }\n\t\tif (ms === 0) { ms = 24*60*60*1000; }\n\t\tbeg.setDate(new Date(b.getTime() + ms));\n\t\tend.setDate(new Date(e.getTime() + ms));\n\t\t// beg.setDate(e);\n\t\t// end.setDate(new Date(beg.getDate().getTime() + ms));\n\t\tdateInterval = [beg.getDate().getTime()/1000, 24*60*60 + end.getDate().getTime()/1000];\n\t\tsetFilter();\n\t\tsetFilterSkpdi();\n\t\tsetFilterGibdd();\n\t\tsetFilterGibddLo();\n\t\tsetFilterGibddSpt();\n \t\tsetFilterGibddRub();\n// console.log('ss1ssss', dateInterval, beg.getDate(), end.getDate())\n\t};\n\n\t// ДТП Очаги (5)\n\tlet hearths_stricken5;\n\tlet str_icon_type5 = [''];\n\tlet hearths_period_type_5 = 1;\n\tlet hearths_year_5 = {};\n\tlet hearths_quarter_5 = {};\n\tlet last_quarter_5;\n\tObject.keys(optDataHearths5.years || {}).sort().forEach(key => {\n\t\thearths_year_5[key] = true;\n\t\tObject.keys(optDataHearths5.years[key]).sort().forEach(key1 => {\n\t\t\tlast_quarter_5 = {};\n\t\t\tlast_quarter_5[key] = {};\n\t\t\tlast_quarter_5[key][key1] = true;\n\t\t});\n\t});\n\thearths_quarter_5 = last_quarter_5 || {};\n\t// const setFilterHearthsTmpPeriodType = (ev) => {\n // console.log('setFilterHearthsTmpPeriodType', hearths_period_type_tmp, ev)\n\t// };\n\n    const setFilterHearths5 = (ev) => {\n\t\tif (DtpHearths5._map) {\n\t\tlet arg = [],\n\t\t\ttarget = ev.target || {},\n\t\t\tchecked = target.checked,\n\t\t\tid = target.id,\n\t\t\tname = target.name;\n\t\t// console.log('setFilterHearthsTmp', id, name, checked, hearths_period_type_tmp, hearths_year_tmp, last_quarter_tmp, ev);\n\n\t\tif (id === 'hearths_period_type_52') {\n\t\t\thearths_period_type_5 = 2;\n\t\t} else if (id === 'hearths_period_type_51') {\n\t\t\thearths_period_type_5 = 1;\n\t\t} else if (id === 'hearths_year_5') {\n\t\t\tif (checked) {\n\t\t\t\thearths_year_5[name] = true;\n\t\t\t} else {\n\t\t\t\tdelete hearths_year_5[name];\n\t\t\t}\n\t\t} else if (id === 'hearths_quarter_5') {\n\t\t\tlet arr = name.split('_');\n\t\t\tif (checked) {\n\t\t\t\tif (!hearths_quarter_5[arr[0]]) { hearths_quarter_5[arr[0]] = {}; }\n\t\t\t\thearths_quarter_5[arr[0]][arr[1]] = true;\n\t\t\t} else {\n\t\t\t\tif (hearths_quarter_5[arr[0]]) {\n\t\t\t\t\tdelete hearths_quarter_5[arr[0]][arr[1]];\n\t\t\t\t}\n\t\t\t\tif (Object.keys(hearths_quarter_5[arr[0]]).length === 0) {\n\t\t\t\t\tdelete hearths_quarter_5[arr[0]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hearths_period_type_5 === 1) {\n\t\t\t// if (Object.keys(hearths_year_5).length) {\n\t\t\t\targ.push({type: 'year', zn: hearths_year_5});\n\t\t\t// }\n\t\t} else if (hearths_period_type_5 === 2) {\n\t\t// } else if (Object.keys(hearths_quarter_5).length) {\n\t\t\targ.push({type: 'quarter', zn: hearths_quarter_5});\n\t\t}\n\t\tif (hearths_stricken5) {\n\t\t\targ.push({type: 'stricken', zn: Number(hearths_stricken5)});\n\t\t}\n\t\tif (str_icon_type5.length > 0 && str_icon_type5[0]) {\n\t\t\targ.push({type: 'str_icon_type', zn: str_icon_type5});\n\t\t}\n\t\tif (id_dtp) {\n\t\t\targ.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\t\n\t\tDtpHearths5.setFilter(arg);\n\t\t}\n \t};\n\n\t// ДТП Очаги (3)\n\tlet hearths_stricken3;\n\tlet str_icon_type3 = [''];\n\tlet hearths_period_type_3 = 1;\n\tlet hearths_year_3 = {};\n\tlet hearths_quarter_3 = {};\n\tlet last_quarter_3;\n\tObject.keys(optDataHearths3.years || {}).sort().forEach(key => {\n\t\thearths_year_3[key] = true;\n\t\tObject.keys(optDataHearths3.years[key]).sort().forEach(key1 => {\n\t\t\tlast_quarter_3 = {};\n\t\t\tlast_quarter_3[key] = {};\n\t\t\tlast_quarter_3[key][key1] = true;\n\t\t});\n\t});\n\thearths_quarter_3 = last_quarter_3 || {};\n\t// const setFilterHearthsTmpPeriodType = (ev) => {\n // console.log('setFilterHearthsTmpPeriodType', hearths_period_type_tmp, ev)\n\t// };\n\n    const setFilterHearths3 = (ev) => {\n\t\tif (DtpHearths3._map) {\n\t\tlet arg = [],\n\t\t\ttarget = ev.target || {},\n\t\t\tchecked = target.checked,\n\t\t\tid = target.id,\n\t\t\tname = target.name;\n\t\t// console.log('setFilterHearthsTmp', id, name, checked, hearths_period_type_tmp, hearths_year_tmp, last_quarter_tmp, ev);\n\n\t\tif (id === 'hearths_period_type_32') {\n\t\t\thearths_period_type_3 = 2;\n\t\t} else if (id === 'hearths_period_type_31') {\n\t\t\thearths_period_type_3 = 1;\n\t\t} else if (id === 'hearths_year_3') {\n\t\t\tif (checked) {\n\t\t\t\thearths_year_3[name] = true;\n\t\t\t} else {\n\t\t\t\tdelete hearths_year_3[name];\n\t\t\t}\n\t\t} else if (id === 'hearths_quarter_3') {\n\t\t\tlet arr = name.split('_');\n\t\t\tif (checked) {\n\t\t\t\tif (!hearths_quarter_3[arr[0]]) { hearths_quarter_3[arr[0]] = {}; }\n\t\t\t\thearths_quarter_3[arr[0]][arr[1]] = true;\n\t\t\t} else {\n\t\t\t\tif (hearths_quarter_3[arr[0]]) {\n\t\t\t\t\tdelete hearths_quarter_3[arr[0]][arr[1]];\n\t\t\t\t}\n\t\t\t\tif (Object.keys(hearths_quarter_3[arr[0]]).length === 0) {\n\t\t\t\t\tdelete hearths_quarter_3[arr[0]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hearths_period_type_3 === 1) {\n\t\t\t// if (Object.keys(hearths_year_3).length) {\n\t\t\t\targ.push({type: 'year', zn: hearths_year_3});\n\t\t\t// }\n\t\t} else if (hearths_period_type_3 === 2) {\n\t\t// } else if (Object.keys(hearths_quarter_3).length) {\n\t\t\targ.push({type: 'quarter', zn: hearths_quarter_3});\n\t\t}\n\t\tif (hearths_stricken3) {\n\t\t\targ.push({type: 'stricken', zn: Number(hearths_stricken3)});\n\t\t}\n\t\tif (str_icon_type3.length > 0 && str_icon_type3[0]) {\n\t\t\targ.push({type: 'str_icon_type', zn: str_icon_type3});\n\t\t}\n\t\tif (id_dtp) {\n\t\t\targ.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\n\t\tDtpHearths3.setFilter(arg);\n\t\t}\n \t};\n\n\t// ДТП Очаги (Stat)\n\tlet hearths_strickenStat;\n\tlet str_icon_typeStat = [''];\n\tlet hearths_period_type_Stat = 1;\n\tlet hearths_year_Stat = {};\n\tlet hearths_quarter_Stat = {};\n\tlet last_quarter_Stat;\n\tObject.keys(optDataHearthsStat.years || {}).sort().forEach(key => {\n\t\thearths_year_Stat[key] = true;\n\t\tObject.keys(optDataHearthsStat.years[key]).sort().forEach(key1 => {\n\t\t\tlast_quarter_Stat = {};\n\t\t\tlast_quarter_Stat[key] = {};\n\t\t\tlast_quarter_Stat[key][key1] = true;\n\t\t});\n\t});\n\thearths_quarter_Stat = last_quarter_Stat || {};\n\t// const setFilterHearthsTmpPeriodType = (ev) => {\n // console.log('setFilterHearthsTmpPeriodType', hearths_period_type_tmp, ev)\n\t// };\n\n    const setFilterHearthsStat = (ev) => {\n\t\tif (DtpHearthsStat._map) {\n\t\tlet arg = [],\n\t\t\ttarget = ev.target || {},\n\t\t\tchecked = target.checked,\n\t\t\tid = target.id,\n\t\t\tname = target.name;\n\t\t// console.log('setFilterHearthsTmp', id, name, checked, hearths_period_type_tmp, hearths_year_tmp, last_quarter_tmp, ev);\n\n\t\tif (id === 'hearths_period_type_Stat2') {\n\t\t\thearths_period_type_Stat = 2;\n\t\t} else if (id === 'hearths_period_type_Stat1') {\n\t\t\thearths_period_type_Stat = 1;\n\t\t} else if (id === 'hearths_year_Stat') {\n\t\t\tif (checked) {\n\t\t\t\thearths_year_Stat[name] = true;\n\t\t\t} else {\n\t\t\t\tdelete hearths_year_Stat[name];\n\t\t\t}\n\t\t} else if (id === 'hearths_quarter_Stat') {\n\t\t\tlet arr = name.split('_');\n\t\t\tif (checked) {\n\t\t\t\tif (!hearths_quarter_Stat[arr[0]]) { hearths_quarter_Stat[arr[0]] = {}; }\n\t\t\t\thearths_quarter_Stat[arr[0]][arr[1]] = true;\n\t\t\t} else {\n\t\t\t\tif (hearths_quarter_Stat[arr[0]]) {\n\t\t\t\t\tdelete hearths_quarter_Stat[arr[0]][arr[1]];\n\t\t\t\t}\n\t\t\t\tif (Object.keys(hearths_quarter_Stat[arr[0]]).length === 0) {\n\t\t\t\t\tdelete hearths_quarter_Stat[arr[0]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hearths_period_type_Stat === 1) {\n\t\t\t// if (Object.keys(hearths_year_Stat).length) {\n\t\t\t\targ.push({type: 'year', zn: hearths_year_Stat});\n\t\t\t// }\n\t\t} else if (hearths_period_type_Stat === 2) {\n\t\t// } else if (Object.keys(hearths_quarter_Stat).length) {\n\t\t\targ.push({type: 'quarter', zn: hearths_quarter_Stat});\n\t\t}\n\t\tif (hearths_strickenStat) {\n\t\t\targ.push({type: 'stricken', zn: Number(hearths_strickenStat)});\n\t\t}\n\t\tif (str_icon_typeStat.length > 0 && str_icon_typeStat[0]) {\n\t\t\targ.push({type: 'str_icon_type', zn: str_icon_typeStat});\n\t\t}\n\t\tif (id_dtp) {\n\t\t\targ.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\t\n\t\tDtpHearthsStat.setFilter(arg);\n\t\t}\n \t};\n\n\t// ДТП Очаги (TMP)\n\tlet hearths_strickenTmp;\n\tlet str_icon_typeTmp = [''];\n\tlet hearths_period_type_tmp = 1;\n\tlet hearths_year_tmp = {};\n\tlet hearths_quarter_tmp = {};\n\tlet last_quarter_tmp;\n\tObject.keys(optDataHearthsTmp.years || {}).sort().forEach(key => {\n\t\thearths_year_tmp[key] = true;\n\t\tObject.keys(optDataHearthsTmp.years[key]).sort().forEach(key1 => {\n\t\t\tlast_quarter_tmp = {};\n\t\t\tlast_quarter_tmp[key] = {};\n\t\t\tlast_quarter_tmp[key][key1] = true;\n\t\t});\n\t});\n\thearths_quarter_tmp = last_quarter_tmp || {};\n\t// const setFilterHearthsTmpPeriodType = (ev) => {\n // console.log('setFilterHearthsTmpPeriodType', hearths_period_type_tmp, ev)\n\t// };\n\n    const setFilterHearthsTmp = (ev) => {\n\t\tif (DtpHearthsTmp._map) {\n\t\tlet arg = [],\n\t\t\ttarget = ev.target || {},\n\t\t\tchecked = target.checked,\n\t\t\tid = target.id,\n\t\t\tname = target.name;\n\t\t// console.log('setFilterHearthsTmp', id, name, checked, hearths_period_type_tmp, hearths_year_tmp, last_quarter_tmp, ev);\n\t\t\n\t\tif (id === 'hearths_period_type_tmp2') {\n\t\t\thearths_period_type_tmp = 2;\n\t\t} else if (id === 'hearths_period_type_tmp1') {\n\t\t\thearths_period_type_tmp = 1;\n\t\t} else if (id === 'hearths_year_tmp') {\n\t\t\tif (checked) {\n\t\t\t\thearths_year_tmp[name] = true;\n\t\t\t} else {\n\t\t\t\tdelete hearths_year_tmp[name];\n\t\t\t}\n\t\t} else if (id === 'hearths_quarter_tmp') {\n\t\t\tlet arr = name.split('_');\n\t\t\tif (checked) {\n\t\t\t\tif (!hearths_quarter_tmp[arr[0]]) { hearths_quarter_tmp[arr[0]] = {}; }\n\t\t\t\thearths_quarter_tmp[arr[0]][arr[1]] = true;\n\t\t\t} else {\n\t\t\t\tif (hearths_quarter_tmp[arr[0]]) {\n\t\t\t\t\tdelete hearths_quarter_tmp[arr[0]][arr[1]];\n\t\t\t\t}\n\t\t\t\tif (Object.keys(hearths_quarter_tmp[arr[0]]).length === 0) {\n\t\t\t\t\tdelete hearths_quarter_tmp[arr[0]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hearths_period_type_tmp === 1) {\n\t\t\t// if (Object.keys(hearths_year_tmp).length) {\n\t\t\t\targ.push({type: 'year', zn: hearths_year_tmp});\n\t\t\t// }\n\t\t} else if (hearths_period_type_tmp === 2) {\n\t\t// } else if (Object.keys(hearths_quarter_tmp).length) {\n\t\t\targ.push({type: 'quarter', zn: hearths_quarter_tmp});\n\t\t}\n\t\tif (hearths_strickenTmp) {\n\t\t\targ.push({type: 'stricken', zn: Number(hearths_strickenTmp)});\n\t\t}\n\t\tif (str_icon_typeTmp.length > 0 && str_icon_typeTmp[0]) {\n\t\t\targ.push({type: 'str_icon_type', zn: str_icon_typeTmp});\n\t\t}\n\t\tif (id_dtp) {\n\t\t\targ.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\t\t\n\t\tDtpHearthsTmp.setFilter(arg);\n\t\t}\n \t};\n\n\t// ДТП Очаги\n\tlet hearths_stricken;\n\tlet str_icon_type = [''];\n\tlet hearths_period_type = 1;\n\tlet hearths_year = {};\n\tlet hearths_quarter = {};\n\tlet last_quarter;\n\tObject.keys(optDataHearths.years || {}).sort().forEach(key => {\n\t\thearths_year[key] = true;\n\t\tObject.keys(optDataHearths.years[key]).sort().forEach(key1 => {\n\t\t\tlast_quarter = {};\n\t\t\tlast_quarter[key] = {};\n\t\t\tlast_quarter[key][key1] = true;\n\t\t});\n\t});\n\thearths_quarter = last_quarter || {};\n\n    const setFilterHearths = (ev) => {\n\t\tif (DtpHearths._map) {\n\t\tlet arg = [],\n\t\t\ttarget = ev.target || {},\n\t\t\tchecked = target.checked,\n\t\t\tid = target.id,\n\t\t\tname = target.name;\n\t\t// console.log('setFilterHearths', checked, id, name, ev);\n\t\tif (id === 'hearths_period_type2') {\n\t\t\thearths_period_type = 2;\n\t\t} else if (id === 'hearths_period_type1') {\n\t\t\thearths_period_type = 1;\n\t\t} else if (id === 'hearths_year') {\n\t\t\tif (checked) {\n\t\t\t\thearths_year[name] = true;\n\t\t\t} else {\n\t\t\t\tdelete hearths_year[name];\n\t\t\t}\n\t\t} else if (id === 'hearths_quarter') {\n\t\t\tlet arr = name.split('_');\n\t\t\tif (checked) {\n\t\t\t\tif (!hearths_quarter[arr[0]]) { hearths_quarter[arr[0]] = {}; }\n\t\t\t\thearths_quarter[arr[0]][arr[1]] = true;\n\t\t\t} else {\n\t\t\t\tif (hearths_quarter[arr[0]]) {\n\t\t\t\t\tdelete hearths_quarter[arr[0]][arr[1]];\n\t\t\t\t}\n\t\t\t\tif (Object.keys(hearths_quarter[arr[0]]).length === 0) {\n\t\t\t\t\tdelete hearths_quarter[arr[0]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hearths_period_type === 1) {\n\t\t\targ.push({type: 'year', zn: hearths_year});\n\t\t} else if (hearths_period_type === 2) {\n\t\t// } else if (Object.keys(hearths_quarter).length) {\n\t\t\targ.push({type: 'quarter', zn: hearths_quarter});\n\t\t}\n\t\tif (hearths_stricken) {\n\t\t\targ.push({type: 'stricken', zn: Number(hearths_stricken)});\n\t\t}\n\t\tif (str_icon_type.length > 0 && str_icon_type[0]) {\n\t\t\targ.push({type: 'str_icon_type', zn: str_icon_type});\n\t\t}\n\t\tif (id_dtp) {\n\t\t\targ.push({type: 'id_dtp', zn: id_dtp});\n\t\t}\n\n\t\tDtpHearths.setFilter(arg);\n\t\t}\n \t};\n\n</script>\n\n\t  <div class=\"mvsFilters\">\n\n\t\t{#if DtpHearthsLo._map && DtpHearthsLo._opt && DtpHearthsLo._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>Очаги по пикетажу Ленинградская область</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID Очага: <input type=\"text\" on:input={oncheckIdHearth} value={id_hearth} /></div>\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Фильтрация по годам:</legend>\n\t\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t\t{#each Object.keys(DtpHearthsLo._opt.years).sort() as key}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsLo} id=\"hearths_year_Lo\" checked={hearths_year_Lo[key]} name=\"{key}\"><label for=\"hearths_year_Lo\">{key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_3\" checked={ht.hearth3} name=\"hearth3\"><label for=\"ht_3\">одного типа</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_5\" checked={ht.hearth5} name=\"hearth5\"><label for=\"ht_5\">разного типа</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={roads} on:change=\"{setFilterHearthsLo}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе дороги ({optRoadTypesLo.reduce((p, c) => { p += optDataHearthsLo.road[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optRoadTypesLo as key}\n\t\t\t\t\t\t<option value={key} class=\"road_{key}\">\n\t\t\t\t\t\t\t({optDataHearthsLo.road[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearthsPicket4._map && DtpHearthsPicket4._opt && DtpHearthsPicket4._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>Предочаги по пикетажу</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID Очага: <input type=\"text\" on:input={oncheckIdHearth} value={id_hearth} /></div>\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Фильтрация по периодам:</legend>\n\t\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t\t<input type=\"radio\" on:change={setFilterHearthsPicket4} bind:group={hearths_period_type_Stat} value={1} checked={hearths_period_type_Stat === 1} id=\"hearths_period_type_Stat1\" name=\"hearths_period_type_Stat\"><label for=\"hearths_period_type_Stat1\">Фильтрация по годам</label>\n\t\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t\t{#each Object.keys(DtpHearthsPicket4._opt.years).sort() as key}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsPicket4} id=\"hearths_year_Picket4\" checked={hearths_year_Picket4[key]} disabled={hearths_period_type_Stat === 2} name=\"{key}\"><label for=\"hearths_year_Picket4\">{key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_3\" checked={ht.hearth3} name=\"hearth3\"><label for=\"ht_3\">одного типа</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_5\" checked={ht.hearth5} name=\"hearth5\"><label for=\"ht_5\">разного типа</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={roads} on:change=\"{setFilterHearthsPicket4}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе дороги ({optRoadTypes4.reduce((p, c) => { p += optDataHearthsPicket4.road[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optRoadTypes4 as key}\n\t\t\t\t\t\t<option value={key} class=\"road_{key}\">\n\t\t\t\t\t\t\t({optDataHearthsPicket4.road[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select bind:value={hearths_stricken4} name=\"stricken\" on:change=\"{setFilterHearthsPicket4}\">\n\t\t\t\t\t<option value=''>({optDataHearthsPicket4.stricken[0] || 0}) Очаги все</option>\n\t\t\t\t\t<option value=1>({optDataHearthsPicket4.stricken[1] || 0}) Только с погибшими</option>\n\t\t\t\t\t<option value=2>({optDataHearthsPicket4.stricken[2] || 0}) Только с пострадавшими</option>\n\t\t\t\t\t<option value=3>({optDataHearthsPicket4.stricken[3] || 0}) С пострадавшими или погибшими</option>\n\t\t\t\t\t<option value=4>({optDataHearthsPicket4.stricken[4] || 0}) С пострадавшими и погибшими</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearthsSettlements._map && DtpHearthsSettlements._opt && DtpHearthsSettlements._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>Очаги с привязкой к городам</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID Очага: <input type=\"text\" on:input={oncheckIdHearth} value={id_hearth} /></div>\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Расположение очага:</legend>\n\t\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={oncheckIdCity} id=\"city_1\" checked={city[1]} name=\"1\"><label for=\"city_1\">в населенном пункте</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={oncheckIdCity} id=\"city_0\" checked={city[0]} name=\"0\"><label for=\"city_0\">вне населенного пункта</label><br/>\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={oncheckIdCity} id=\"city_2\" checked={city[2]} name=\"2\"><label for=\"city_2\">на границе населенного пункта</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Фильтрация по годам:</legend>\n\t\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t\t{#each Object.keys(DtpHearthsSettlements._opt.years).sort() as key}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsSettlements} id=\"hearths_year_Settlements\" checked={hearths_year_Settlements[key]} name=\"{key}\"><label for=\"hearths_year_Settlements\">{key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_3\" checked={ht.hearth3} name=\"hearth3\"><label for=\"ht_3\">одного типа</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_5\" checked={ht.hearth5} name=\"hearth5\"><label for=\"ht_5\">разного типа</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={roads} on:change=\"{setFilterHearthsSettlements}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе дороги ({optRoadTypes5.reduce((p, c) => { p += optDataHearthsSettlements.road[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optRoadTypes5 as key}\n\t\t\t\t\t\t<option value={key} class=\"road_{key}\">\n\t\t\t\t\t\t\t({optDataHearthsSettlements.road[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearthsPicket._map && DtpHearthsPicket._opt && DtpHearthsPicket._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Очаги(Picket)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID Очага: <input type=\"text\" on:input={oncheckIdHearth} value={id_hearth} /></div>\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Фильтрация по годам:</legend>\n\t\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t\t{#each Object.keys(DtpHearthsPicket._opt.years).sort() as key}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsPicket} id=\"hearths_year_Picket\" checked={hearths_year_Picket[key]} name=\"{key}\"><label for=\"hearths_year_Picket\">{key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_3\" checked={ht.hearth3} name=\"hearth3\"><label for=\"ht_3\">одного типа</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckHt} id=\"ht_5\" checked={ht.hearth5} name=\"hearth5\"><label for=\"ht_5\">разного типа</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={roads} on:change=\"{setFilterHearthsPicket}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе дороги ({optRoadTypes.reduce((p, c) => { p += optDataHearthsPicket.road[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optRoadTypes as key}\n\t\t\t\t\t\t<option value={key} class=\"road_{key}\">\n\t\t\t\t\t\t\t({optDataHearthsPicket.road[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearths5._map && DtpHearths5._opt && DtpHearths5._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Очаги (5)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Фильтрация по периодам:</legend>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t<input type=\"radio\" on:change={setFilterHearths5} bind:group={hearths_period_type_5} value={1} checked={hearths_period_type_5 === 1} id=\"hearths_period_type_51\" name=\"hearths_period_type_5\"><label for=\"hearths_period_type_51\">Фильтрация по годам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearths5._opt.years).sort() as key}\n\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearths5} id=\"hearths_year_5\" checked={hearths_year_5[key]} disabled={hearths_period_type_5 === 2} name=\"{key}\"><label for=\"hearths_year_5\">{key}</label>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={str_icon_type5} on:change=\"{setFilterHearths5}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optTypeHearths5Keys.reduce((p, c) => { p += optDataHearths5.str_icon_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optTypeHearths5Keys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataHearths5.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataHearths5.str_icon_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select bind:value={hearths_stricken5} on:change=\"{setFilterHearths5}\">\n\t\t\t\t\t<option value=''>({optDataHearths5.stricken[0] || 0}) Очаги все</option>\n\t\t\t\t\t<option value=1>({optDataHearths5.stricken[1] || 0}) Только с погибшими</option>\n\t\t\t\t\t<option value=2>({optDataHearths5.stricken[2] || 0}) Только с пострадавшими</option>\n\t\t\t\t\t<option value=3>({optDataHearths5.stricken[3] || 0}) С пострадавшими или погибшими</option>\n\t\t\t\t\t<option value=4>({optDataHearths5.stricken[4] || 0}) С пострадавшими и погибшими</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearths3._map && DtpHearths3._opt && DtpHearths3._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Очаги (3)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Фильтрация по периодам:</legend>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t<input type=\"radio\" on:change={setFilterHearths3} bind:group={hearths_period_type_3} value={1} checked={hearths_period_type_3 === 1} id=\"hearths_period_type_31\" name=\"hearths_period_type_3\"><label for=\"hearths_period_type_31\">Фильтрация по годам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearths3._opt.years).sort() as key}\n\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearths3} id=\"hearths_year_3\" checked={hearths_year_3[key]} disabled={hearths_period_type_3 === 2} name=\"{key}\"><label for=\"hearths_year_3\">{key}</label>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={str_icon_type3} on:change=\"{setFilterHearths3}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optTypeHearths3Keys.reduce((p, c) => { p += optDataHearths3.str_icon_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optTypeHearths3Keys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataHearths3.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataHearths3.str_icon_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select bind:value={hearths_stricken3} on:change=\"{setFilterHearths3}\">\n\t\t\t\t\t<option value=''>({optDataHearths3.stricken[0] || 0}) Очаги все</option>\n\t\t\t\t\t<option value=1>({optDataHearths3.stricken[1] || 0}) Только с погибшими</option>\n\t\t\t\t\t<option value=2>({optDataHearths3.stricken[2] || 0}) Только с пострадавшими</option>\n\t\t\t\t\t<option value=3>({optDataHearths3.stricken[3] || 0}) С пострадавшими или погибшими</option>\n\t\t\t\t\t<option value=4>({optDataHearths3.stricken[4] || 0}) С пострадавшими и погибшими</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearthsStat._map && DtpHearthsStat._opt && DtpHearthsStat._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Очаги (Stat)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Фильтрация по периодам:</legend>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t<input type=\"radio\" on:change={setFilterHearthsStat} bind:group={hearths_period_type_Stat} value={1} checked={hearths_period_type_Stat === 1} id=\"hearths_period_type_Stat1\" name=\"hearths_period_type_Stat\"><label for=\"hearths_period_type_Stat1\">Фильтрация по годам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearthsStat._opt.years).sort() as key}\n\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsStat} id=\"hearths_year_Stat\" checked={hearths_year_Stat[key]} disabled={hearths_period_type_Stat === 2} name=\"{key}\"><label for=\"hearths_year_Stat\">{key}</label>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t<input type=\"radio\" on:change={setFilterHearthsStat} bind:group={hearths_period_type_Stat} value={2} id=\"hearths_period_type_Stat2\" name=\"hearths_period_type_Stat\"><label for=\"hearths_period_type_Stat2\">Фильтрация по кварталам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearthsStat._opt.years).sort() as key}\n\t\t\t\t\t\t{#each Object.keys(DtpHearthsStat._opt.years[key]).sort() as key1}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsStat} id=\"hearths_quarter_Stat\" checked={hearths_quarter_Stat[key] && hearths_quarter_Stat[key][key1]} disabled={hearths_period_type_Stat === 1} name=\"{key}_{key1}\"><label for=\"hearths_quarter_Stat_{key}_{key1}\">{key1} кв. {key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={str_icon_typeStat} on:change=\"{setFilterHearthsStat}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optTypeHearthsStatKeys.reduce((p, c) => { p += optDataHearthsStat.str_icon_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optTypeHearthsStatKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataHearthsStat.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataHearthsStat.str_icon_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select bind:value={hearths_strickenStat} on:change=\"{setFilterHearthsStat}\">\n\t\t\t\t\t<option value=''>({optDataHearthsStat.stricken[0] || 0}) Очаги все</option>\n\t\t\t\t\t<option value=1>({optDataHearthsStat.stricken[1] || 0}) Только с погибшими</option>\n\t\t\t\t\t<option value=2>({optDataHearthsStat.stricken[2] || 0}) Только с пострадавшими</option>\n\t\t\t\t\t<option value=3>({optDataHearthsStat.stricken[3] || 0}) С пострадавшими или погибшими</option>\n\t\t\t\t\t<option value=4>({optDataHearthsStat.stricken[4] || 0}) С пострадавшими и погибшими</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearthsTmp._map && DtpHearthsTmp._opt && DtpHearthsTmp._opt.years}\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Очаги (TMP)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Фильтрация по периодам:</legend>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t<input type=\"radio\" on:change={setFilterHearthsTmp} bind:group={hearths_period_type_tmp} value={1} checked={hearths_period_type_tmp === 1} id=\"hearths_period_type_tmp1\" name=\"hearths_period_type_tmp\"><label for=\"hearths_period_type_tmp1\">Фильтрация по годам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearthsTmp._opt.years).sort() as key}\n\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsTmp} id=\"hearths_year_tmp\" checked={hearths_year_tmp[key]} disabled={hearths_period_type_tmp === 2} name=\"{key}\"><label for=\"hearths_year_tmp\">{key}</label>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t<input type=\"radio\" on:change={setFilterHearthsTmp} bind:group={hearths_period_type_tmp} value={2} id=\"hearths_period_type_tmp2\" name=\"hearths_period_type_tmp\"><label for=\"hearths_period_type_tmp2\">Фильтрация по кварталам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearthsTmp._opt.years).sort() as key}\n\t\t\t\t\t\t{#each Object.keys(DtpHearthsTmp._opt.years[key]).sort() as key1}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearthsTmp} id=\"hearths_quarter_tmp\" checked={hearths_quarter_tmp[key] && hearths_quarter_tmp[key][key1]} disabled={hearths_period_type_tmp === 1} name=\"{key}_{key1}\"><label for=\"hearths_quarter_tmp_{key}_{key1}\">{key1} кв. {key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!-- select bind:value={hearths_yearTmp} on:change=\"{setFilterHearthsTmp}\">\n\t\t\t\t\t<option value=''>Все года</option>\n\t\t\t\t\t{#each Object.keys(DtpHearthsTmp._opt.years).sort() as key}\n\t\t\t\t\t\t<option value={key}>{key}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\n\t\t\t\t<select bind:value={hearths_quarterTmp} on:change=\"{setFilterHearthsTmp}\">\n\t\t\t\t\t<option value=''>Все кварталы</option>\n\t\t\t\t\t<option value=1>1 квартал</option>\n\t\t\t\t\t<option value=2>2 квартал</option>\n\t\t\t\t\t<option value=3>3 квартал</option>\n\t\t\t\t\t<option value=4>4 квартал</option>\n\t\t\t\t</select -->\n\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={str_icon_typeTmp} on:change=\"{setFilterHearthsTmp}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optTypeHearthsTmpKeys.reduce((p, c) => { p += optDataHearthsTmp.str_icon_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optTypeHearthsTmpKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataHearthsTmp.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataHearthsTmp.str_icon_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select bind:value={hearths_strickenTmp} on:change=\"{setFilterHearthsTmp}\">\n\t\t\t\t\t<option value=''>({optDataHearthsTmp.stricken[0] || 0}) Очаги все</option>\n\t\t\t\t\t<option value=1>({optDataHearthsTmp.stricken[1] || 0}) Только с погибшими</option>\n\t\t\t\t\t<option value=2>({optDataHearthsTmp.stricken[2] || 0}) Только с пострадавшими</option>\n\t\t\t\t\t<option value=3>({optDataHearthsTmp.stricken[3] || 0}) С пострадавшими или погибшими</option>\n\t\t\t\t\t<option value=4>({optDataHearthsTmp.stricken[4] || 0}) С пострадавшими и погибшими</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpHearths._map && DtpHearths._opt && DtpHearths._opt.years}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Очаги</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine nowrap\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Фильтрация по периодам:</legend>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t\t<input type=\"radio\" on:change={setFilterHearths} bind:group={hearths_period_type} value={1} checked={hearths_period_type === 1} id=\"hearths_period_type1\" name=\"hearths_period_type\"><label for=\"hearths_period_type1\">Фильтрация по годам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearths._opt.years).sort() as key}\n\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearths} id=\"hearths_year\" checked={hearths_year[key]} disabled={hearths_period_type === 2} name=\"{key}\"><label for=\"hearths_year{key}\">{key}</label>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pLine type\">\n\t\t\t\t<input type=\"radio\" on:change={setFilterHearths} bind:group={hearths_period_type} value={2} id=\"hearths_period_type2\" name=\"hearths_period_type\"><label for=\"hearths_period_type2\">Фильтрация по кварталам</label>\n\t\t\t\t\t<div class=\"pLine margin\">\n\t\t\t\t\t{#each Object.keys(DtpHearths._opt.years).sort() as key}\n\t\t\t\t\t\t{#each Object.keys(DtpHearths._opt.years[key]).sort() as key1}\n\t\t\t\t\t\t\t<input type=\"checkbox\" on:change={setFilterHearths} id=\"hearths_quarter\" checked={hearths_quarter[key] && hearths_quarter[key][key1]} disabled={hearths_period_type === 1} name=\"{key}_{key1}\"><label for=\"hearths_quarter_{key}_{key1}\">{key1} кв. {key}</label>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_typeTmp\" bind:value={str_icon_type} on:change=\"{setFilterHearths}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optTypeHearthsKeys.reduce((p, c) => { p += optDataHearths.str_icon_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optTypeHearthsKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataHearths.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataHearths.str_icon_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select bind:value={hearths_stricken} on:change=\"{setFilterHearths}\">\n\t\t\t\t\t<option value=''>({optDataHearths.stricken[0] || 0}) Очаги все</option>\n\t\t\t\t\t<option value=1>({optDataHearths.stricken[1] || 0}) Только с погибшими</option>\n\t\t\t\t\t<option value=2>({optDataHearths.stricken[2] || 0}) Только с пострадавшими</option>\n\t\t\t\t\t<option value=3>({optDataHearths.stricken[3] || 0}) С пострадавшими или погибшими</option>\n\t\t\t\t\t<option value=4>({optDataHearths.stricken[4] || 0}) С пострадавшими и погибшими</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpVerifyed._map || DtpSkpdi._map || DtpGibddLo._map || DtpGibddSpt._map || DtpGibdd._map || DtpGibddRub._map || Measures._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pikaday pLine\">\n\t\t\t<button class=\"pika-prev\" on:click={onPrev}></button>\n\t\t\t<input type=\"text\" class=\"begDate\" bind:this={begDate} />\n\t\t\t<input type=\"text\" class=\"endDate\" bind:this={endDate} />\n\t\t\t<button class=\"pika-next\" on:click={onNext}></button>\n\t\t</div>\n\t\t{#if DtpVerifyed._map || DtpSkpdi._map || DtpGibdd._map || DtpGibddLo._map || DtpGibddSpt._map || DtpGibddRub._map}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\t<input bind:value={minOpacity} on:input={setMinOpacity} type=\"range\" min=\"0.05\" max=\"1\" step=\"0.01\" disabled={!heat}><span>Мин.яркость ({minOpacity})</span>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\t<input bind:value={radius} on:input={setMinOpacity} type=\"range\" min=\"0\" max=\"100\" step=\"1\" disabled={!heat}><span>Радиус ({radius})</span>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\t<input bind:value={blur} on:input={setMinOpacity} type=\"range\" min=\"0\" max=\"15\" step=\"0.01\" disabled={!heat}><span>Размытие ({blur})</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" bind:this={heatElement} on:change={setHeat} checked={isHeatChecked} name=\"heat\"><label for=\"heat\"> - тепловая карта</label>\n\t\t\t</div>\n\t\t{/if}\n\t\t{:else if !Measures._map && !DtpHearthsSettlements._map && !DtpHearths._map && !DtpHearthsStat._map && !DtpHearthsTmp._map && !DtpHearthsPicket4._map && !DtpHearthsPicket._map && !DtpHearths3._map && !DtpHearths5._map && !Rub._map}\n\t\t\t<div class=\"pLine\">Нет включенных слоев</div>\n\t\t{/if}\n\n\t\t{#if Measures._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>Мероприятий</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t{#if optMeasures.type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_type\" bind:value={measures_type} on:change=\"{setFilterMeasures}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optMeasuresKeys.reduce((p, c) => { p += optMeasures.type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optMeasuresKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"type_{optMeasures.type[key]}\">\n\t\t\t\t\t\t\t({optMeasures.type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpVerifyed._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП Сводный</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine\"><input type=\"radio\" id=\"d0\" name=\"drone\" value=0 checked on:click={oncheck}><label for=\"d0\">Все</label></div>\n\t\t\t{#if DtpVerifyed._arm}\n\t\t\t<div class=\"pLine\"><input type=\"radio\" id=\"d1\" name=\"drone\" value=1 on:click={oncheck}><label for=\"d1\">Только Пересечения ГИБДД и СКПДИ</label></div>\n\t\t\t{:else}\n\t\t\t<div class=\"pLine\"><input type=\"radio\" id=\"d1\" name=\"drone\" value=1 on:click={oncheck}><label for=\"d1\">Только Пересечения</label></div>\n\t\t\t<div class=\"pLine\"><input type=\"radio\" id=\"d2\" name=\"drone\" value=\"2\" on:click={oncheck}><label for=\"d2\">Только СКПДИ</label></div>\n\t\t\t{/if}\n\t\t\t<div class=\"pLine\"><input type=\"radio\" id=\"d3\" name=\"drone\" value=\"3\" on:click={oncheck}><label for=\"d3\">Только ГИБДД</label></div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev1\" checked={evnt.ev1} name=\"ev1\"><label for=\"ev1\"> - с мероприятиями</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev0\" checked={evnt.ev0} name=\"ev0\"><label for=\"ev0\"> - без мероприятий</label>\n\t\t\t</div>\n\t\t\t{#if optData.collision_type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_type\" bind:value={collision_type} on:change=\"{setFilter}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optCollisionKeys.reduce((p, c) => { p += optData.collision_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optCollisionKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optData.iconType[key]}\">\n\t\t\t\t\t\t\t({optData.collision_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpSkpdi._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП СКПДИ</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev1\" checked={evnt.ev1} name=\"ev1\"><label for=\"ev1\"> - с мероприятиями</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev0\" checked={evnt.ev0} name=\"ev0\"><label for=\"ev0\"> - без мероприятий</label>\n\t\t\t</div>\n\t\t\t{#if optDataSkpdi.collision_type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_type\" bind:value={collision_type_skpdi} on:change=\"{setFilterSkpdi}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optCollisionSkpdiKeys.reduce((p, c) => { p += optDataSkpdi.collision_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optCollisionSkpdiKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataSkpdi.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataSkpdi.collision_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpGibdd._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП ГИБДД</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckDps} id=\"Dps1\" checked={dps.Dps1} name=\"Dps1\"><label for=\"Dps1\"> - с батальонами ДПС</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckDps} id=\"Dps0\" checked={dps.Dps0} name=\"Dps0\"><label for=\"Dps0\"> - без батальонов ДПС</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev1\" checked={evnt.ev1} name=\"ev1\"><label for=\"ev1\"> - с мероприятиями</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev0\" checked={evnt.ev0} name=\"ev0\"><label for=\"ev0\"> - без мероприятий</label>\n\t\t\t</div>\n\t\t\t{#if optDataGibdd.collision_type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_type\" bind:value={collision_type_gibdd} on:change=\"{setFilterGibdd}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optCollisionGibddKeys.reduce((p, c) => { p += optDataGibdd.collision_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optCollisionGibddKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataGibdd.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataGibdd.collision_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpGibddLo._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП ГИБДД (Ленинградская область)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<!-- div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckDps} id=\"Dps1\" checked={dps.Dps1} name=\"Dps1\"><label for=\"Dps1\"> - с батальонами ДПС</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckDps} id=\"Dps0\" checked={dps.Dps0} name=\"Dps0\"><label for=\"Dps0\"> - без батальонов ДПС</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev1\" checked={evnt.ev1} name=\"ev1\"><label for=\"ev1\"> - с мероприятиями</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev0\" checked={evnt.ev0} name=\"ev0\"><label for=\"ev0\"> - без мероприятий</label>\n\t\t\t</div -->\n\t\t\t{#if optDataGibddLo.collision_type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_type\" bind:value={collision_type_gibdd} on:change=\"{setFilterGibddLo}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optCollisionGibddLoKeys.reduce((p, c) => { p += optDataGibddLo.collision_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optCollisionGibddLoKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataGibddLo.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataGibddLo.collision_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpGibddSpt._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП ГИБДД (Санкт-Петербург)</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t\t<!-- div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckDps} id=\"Dps1\" checked={dps.Dps1} name=\"Dps1\"><label for=\"Dps1\"> - с батальонами ДПС</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckDps} id=\"Dps0\" checked={dps.Dps0} name=\"Dps0\"><label for=\"Dps0\"> - без батальонов ДПС</label>\n\t\t\t</div>\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev1\" checked={evnt.ev1} name=\"ev1\"><label for=\"ev1\"> - с мероприятиями</label>\n\t\t\t\t<input type=\"checkbox\" on:change={oncheckEvents} id=\"ev0\" checked={evnt.ev0} name=\"ev0\"><label for=\"ev0\"> - без мероприятий</label>\n\t\t\t</div -->\n\t\t\t{#if optDataGibddSpt.collision_type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_type\" bind:value={collision_type_gibdd} on:change=\"{setFilterGibddSpt}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optCollisionGibddSptKeys.reduce((p, c) => { p += optDataGibddSpt.collision_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optCollisionGibddSptKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataGibddSpt.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataGibddSpt.collision_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if DtpGibddRub._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>ДТП ГИБДД + Рубежи</b></div>\n\t\t\t<div class=\"pLine\">ID ДТП: <input type=\"text\" on:input={oncheckIdDtp} value={id_dtp} /></div>\n\t\t<div class=\"pLine\">\n\t\t\t<input type=\"checkbox\" bind:checked={list_rubOn} on:change={setFilterGibddRub} name=\"list_rubOn\"><label for=\"list_rubOn\"> - с рубежами</label>\n\t\t\t<input type=\"checkbox\" bind:checked={list_rubOff} on:change={setFilterGibddRub} name=\"list_rubOff\"><label for=\"list_rubOff\"> - без рубежей</label>\n\t\t</div>\n\t\t<div class=\"filtersCont\">\n\t\t\t{#if optDataGibddRub.collision_type}\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<select class=\"multiple_icon_type\" bind:value={collision_type_gibddRub} on:change=\"{setFilterGibddRub}\" multiple>\n\t\t\t\t\t<option value=''>\n\t\t\t\t\t\tВсе типы ({optCollisionGibddRubKeys.reduce((p, c) => { p += optDataGibddRub.collision_type[c]; return p; }, 0)})\n\t\t\t\t\t</option>\n\t\t\t\t\t{#each optCollisionGibddRubKeys as key}\n\t\t\t\t\t\t<option value={key} class=\"icon_type_{optDataGibddRub.iconType[key]}\">\n\t\t\t\t\t\t\t({optDataGibddRub.collision_type[key]}) - {key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\n\t\t{#if Rub._map}\n\t\t<div class=\"pLine\"><hr></div>\n\t\t<div class=\"pLine\">Фильтры - <b>Рубежей</b></div>\n\t\t<div class=\"filtersCont\">\n\t\t\t<div class=\"pLine\">\n\t\t\t\t<input type=\"checkbox\" bind:checked={compOn} on:change={setComp} name=\"comp1\"><label for=\"comp1\"> - есть комплексы</label>\n\t\t\t\t<input type=\"checkbox\" bind:checked={comp1On} on:change={setComp} name=\"comp\"><label for=\"comp\"> -  нет комплексов</label>\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\n\t  </div>\n\n<style>\n\n.multiple_icon_typeTmp option:checked::before, .multiple_icon_type option:checked::before {\n\tcontent: \"\\2611\";\n}\n.multiple_icon_type option.icon_type_14::before,\n.multiple_icon_type option.icon_type_13::before,\n.multiple_icon_type option.icon_type_12::before,\n.multiple_icon_type option.icon_type_11::before,\n.multiple_icon_type option.icon_type_10::before,\n.multiple_icon_type option.icon_type_9::before,\n.multiple_icon_type option.icon_type_6::before,\n.multiple_icon_type option.icon_type_5::before,\n.multiple_icon_type option.icon_type_4::before,\n.multiple_icon_type option.icon_type_3::before,\n.multiple_icon_type option.icon_type_2::before,\n.multiple_icon_type option.icon_type_1::before {\n    background-color: #8B4513;\n}\n.multiple_icon_type option.icon_type_7::before, .multiple_icon_type option.icon_type_8::before {\n    background-color: #228B22;\n}\n.multiple_icon_type option.icon_type_15::before, .multiple_icon_type option.icon_type_16::before {\n    background-color: #7B68EE;\n}\n.multiple_icon_type option.icon_type_17::before, .multiple_icon_type option.icon_type_18::before {\n    background-color: #2F4F4F;\n}\n\n.multiple_icon_typeTmp option.icon_type_1::before, .multiple_icon_typeTmp option.icon_type_2::before {\n    background-color: #FFA500;\n}\n.multiple_icon_typeTmp option.icon_type_3::before, .multiple_icon_typeTmp option.icon_type_4::before {\n    background-color: #B8860B;\n}\n.multiple_icon_typeTmp option.icon_type_5::before, .multiple_icon_typeTmp option.icon_type_6::before {\n    background-color: #CD853F;\n}\n.multiple_icon_typeTmp option.icon_type_7::before, .multiple_icon_typeTmp option.icon_type_8::before {\n    background-color: #228B22;\n}\n.multiple_icon_typeTmp option.icon_type_9::before, .multiple_icon_typeTmp option.icon_type_10::before {\n    background-color: #FF8C00;\n}\n.multiple_icon_typeTmp option.icon_type_11::before, .multiple_icon_typeTmp option.icon_type_12::before {\n    background-color: #D2691E;\n}\n.multiple_icon_typeTmp option.icon_type_13::before, .multiple_icon_typeTmp option.icon_type_14::before {\n    background-color: #DEB887;\n}\n.multiple_icon_typeTmp option.icon_type_15::before, .multiple_icon_typeTmp option.icon_type_16::before {\n    background-color: #7B68EE;\n}\n.multiple_icon_typeTmp option.icon_type_17::before, .multiple_icon_typeTmp option.icon_type_18::before {\n    background-color: #2F4F4F;\n}\n.multiple_icon_typeTmp option.icon_type_19::before, .multiple_icon_typeTmp option.icon_type_20::before {\n    background-color: #FF0000;\n}\n.multiple_icon_typeTmp option::before, .multiple_icon_type option::before {\n\tfont-family: 'Font Awesome 5 Free';\n\tcontent: \"\\2610\";\n\twidth: 1.3em;\n\t/*width: 12px;\n    height: 12px;\n    background-color: red;\n\t*/\n\tdisplay: inline-block;\n\tmargin-right: 2px;\n    padding-left: 5px;\n    color: white;\n}\n.multiple_icon_typeTmp option {\n\t/*margin-left: 22px;*/\n}\n\n.pLine select {\n\tmax-width: 300px;\n}\n.pLine.margin {\n    margin-left: 12px;\n}\n.filtersCont select {\n   /* max-width: 147px;*/\n}\n.endDate, .begDate {\n    width: 72px;\n}\n.pikaday {\n    white-space: nowrap;\n\tmin-width: 188px;\n\tmax-width: 200px;\n    text-align: center;\n}\n.pikaday input {\n    margin: unset;\n}\n.nowrap {\n    width: 362px;\n    white-space: nowrap;\n}\n.pLine {\n   /* width: max-content;\n    display: inline-flex;*/\n}\n.pLine hr {\n    width: 100%;\n}\ninput {\n\tdisplay: inline-block;\n    margin: .4rem;\n}\nlabel {\n    top: -3px;\n\tdisplay: inline-block;\n    position: relative;\n}\n</style>",
    "<script>\n\texport let prp;\n\n    const copyParent = (ev) => {\n\t\tnavigator.clipboard.writeText(ev.target.parentNode.textContent).catch(err => {\n\t\t\tconsole.log('Something went wrong', err);\n\t\t});\n\t};\n\tlet coords = prp.coords[0] || {lat: prp.lat, lon: prp.lon};\n    const getDate = (time) => {\n\t\tif (!time) { return ''; }\n\t\tlet d = new Date(time * 1000);\n\t\treturn d.toLocaleDateString() + ' ' + d.toLocaleTimeString();\n\t};\n\n//console.log('prp ', prp);\n</script>\n\t<div class=\"mvsPopup\">\n\t\t<div class=\"pLine\">Мероприятие<br />({prp.kind || ''})</div>\n\t\t<div class=\"featureCont\">\n\t\t  <table class=\"table\">\n\t\t\t<tbody>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Тип мероприятия:</td>\n\t\t\t  <td>{prp.type || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID:</td>\n\t\t\t  <td>{prp.id || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Статус:</td>\n\t\t\t  <td>{prp.status || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата добавления:</td>\n\t\t\t  <td>{getDate(prp.date_created)}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Дата завершения:</td>\n\t\t\t  <td>{getDate(prp.date_finish_fact)}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Координаты:</td>\n\t\t\t  <td>{coords.lat} {coords.lon} <span on:click={copyParent} title=\"Скопировать в буфер обмена\" class=\"leaflet-gmx-icon-copy\"></span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">ID ДТП СКПДИ:</td>\n\t\t\t  <td>{prp.id_dtp || ''}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t  <td class=\"first\">Описание:</td>\n\t\t\t  <td>{prp.description || ''}</td>\n\t\t\t</tr>\n\t\t   </tbody>\n\t\t  </table>\n\t\t</div>\n\t</div>\n\n<style>\n\n.hidden {\n\tdisplay: none;\n}\n\n.mvsPopup .tabCont {\n\tmargin-top: 22px;\n    border: 1px solid;\n    width: 100%;\n}\n.mvsPopup .tabs {\n    padding-top: 16px;\n}\n.mvsPopup .tab.active {\n    color: red;\n}\n.mvsPopup .tab {\n    color: #1890ff;\n    font-weight: 500;\n\tmargin: 0px 10px 4px 0;\n    padding: 8px 6px;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n}\n\n.win {\n    position: absolute;\n    min-width: 280px;\n    left: 360px;\n    top: 76px;\n}\nspan.link {\n    cursor: pointer;\n    color: blue;\n    display: block;\n    margin-top: 6px;\n}\n.mvsPopup {\n    min-width: 260px;\n}\n.mvsPopup li {\n    cursor: pointer;\n}\n.mvsPopup .table {\n    width: 100%;\n}\n.mvsPopup .featureCont .first {\n    max-width: 100px;\n}\n.primary {\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0,0,0,.12);\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.045);\n    box-shadow: 0 2px 0 rgba(0,0,0,.045);\n}\nbutton:disabled,\nbutton[disabled] {\n    cursor: default;\n    opacity: 0.5;\n}\nbutton:hover {\n    color: blue;\n}\nbutton.current {\n    text-decoration-line: underline;\n}\nbutton {\n    line-height: 1.499;\n    position: relative;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    background-image: none;\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    box-shadow: 0 2px 0 rgba(0,0,0,.015);\n    cursor: pointer;\n    -webkit-transition: all .3s cubic-bezier(.645,.045,.355,1);\n    transition: all .3s cubic-bezier(.645,.045,.355,1);\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: rgba(0,0,0,.65);\n    background-color: #fff;\n    border: 1px solid #d9d9d9;\n}\n\n</style>",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\tconst close = () => {\n\t\t// console.log('modal close');\n\t\tdispatch('close');\n\t}\n\tconst prefix = '//map.mvs.group/skpdi/proxy.php?guid=';\n\n\texport let data;\n\n\tlet cur = 0;\n\tconst prev = () => {\n\t\tif (cur) { cur--; }\n\t};\n\tconst next = () => {\n\t\tif (cur < data.length - 1) { cur++; }\n\t};\n\n\t\t\t\t\t\t// <ul class=\"slider animated\" style=\"transform: translate3d(-100%, 0px, 0px); transition-duration: 350ms;\">\n\t\t\t\t\t\t\t// {#each data as pt, index}\n\t\t\t\t\t\t\t// <li class=\"slide{index === cur ? ' selected' : ''}\"><div><img src=\"{prefix}{pt.guid}\" /></div></li>\n\t\t\t\t\t\t\t// {/each}\n\t\t\t\t\t\t// </ul>\n\t\t\t\t// <div class=\"carousel\">\n\t\t\t\t\t// <div class=\"thumbs-wrapper axis-vertical\">\n\t\t\t\t\t\t// <button type=\"button\" class=\"control-arrow control-prev control-disabled\" aria-label=\"previous slide / item\" on:click|stopPropagation={prev}></button>\n\t\t\t\t\t\t// <ul class=\"thumbs animated\" style=\"transform: translate3d(0px, 0px, 0px); transition-duration: 350ms;\">\n\t\t\t\t\t\t\t// {#each data as pt, index}\n\t\t\t\t\t\t\t// <li class=\"thumb{index === cur ? ' selected' : ''}\" role=\"button\"><img src=\"//map.mvs.group/skpdi/proxy.php?guid={pt.guid}\" /></li>\n\t\t\t\t\t\t\t// {/each}\n\n\t\t\t\t\t\t// </ul>\n\t\t\t\t\t\t// <button type=\"button\" class=\"control-arrow control-next\" aria-label=\"next slide / item\" on:click|stopPropagation={next}></button>\n\t\t\t\t\t// </div>\n\t\t\t\t// </div>\n\t// <button autofocus on:click={close}>close modal</button>\n// <svelte:window on:keydown={handle_keydown}/>\n</script>\n\n\n<div class=\"modal-background\" on:click|stopPropagation={close}></div>\n\n<div class=\"modal\" role=\"dialog\" aria-modal=\"true\" on:click|stopPropagation={()=>{}}>\n\t<div title=\"Закрыть\" class=\"ant-modal-close\" on:click|stopPropagation={close}></div>\n\t<div class=\"ant-modal-content\">\n\t\t<div class=\"ant-modal-header\">\n\t\t\t<div class=\"ant-modal-title\" id=\"rcDialogTitle1\">{data[cur].kindName || 'Фото и схемы ДТП'}</div>\n\t\t</div>\n\t\t<div class=\"ant-modal-body\">\n\t\t\t<div>\n\t\t\t\t<div class=\"carousel carousel-slider\" style=\"width: 100%;\">\n\t\t\t\t\t<button type=\"button\" aria-label=\"previous slide / item\" class=\"control-arrow control-prev\" on:click|stopPropagation={prev}></button>\n\t\t\t\t\t<div class=\"slider-wrapper axis-horizontal\">\n\t\t\t\t\t\t<a target=\"_blank\" href=\"{prefix}{data[cur].guid}\" title=\"Открыть на весь экран\"><img src=\"{prefix}{data[cur].guid}\" alt=\"\" /></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"button\" aria-label=\"next slide / item\" class=\"control-arrow control-next\" on:click|stopPropagation={next}></button>\n\t\t\t\t\t<ul class=\"control-dots\">\n\t\t\t\t\t\t{#each data as pt, index}\n\t\t\t\t\t\t<li on:click|stopPropagation={()=>{cur = index;}} class=\"dot{index === cur ? ' selected' : ''}\" value=\"{index}\" role=\"button\" tabindex=\"0\" aria-label=\"slide item {index}\"></li>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<p class=\"carousel-status\">{cur + 1} из {data.length}</p>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t.modal-background {\n    z-index: 9000000;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: rgba(0,0,0,0.3);\n\t}\n\n\t.modal {\n    z-index: 9000001;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\twidth: calc(100vw - 4em);\n\t\tmax-width: 32em;\n\t\tmax-height: calc(100vh - 4em);\n\t\toverflow: auto;\n\t\ttransform: translate(-50%,-50%);\n\t\tpadding: 1em;\n\t\tborder-radius: 0.2em;\n\t\tbackground: white;\n\t}\n\n\tbutton {\n\t\tdisplay: block;\n\t}\n.ant-modal-content {\n    position: relative;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 0;\n    border-radius: 4px;\n    -webkit-box-shadow: 0 4px 12px rgba(0,0,0,.15);\n    box-shadow: 0 4px 12px rgba(0,0,0,.15);\n    pointer-events: auto;\n}\n.ant-modal-close::after {\n    display: block;\n    width: 14px;\n    height: 14px;\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"64 64 896 896\" width=\"14\" height=\"14\"><path d=\"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"></path></svg>');\n\n}\n.ant-modal-close {\n    position: absolute;\n\ttop: 6px;\n    right: 6px;\n    z-index: 10;\n    padding: 0;\n    color: rgba(0,0,0,.45);\n    font-weight: 700;\n    line-height: 1;\n    text-decoration: none;\n    background: transparent;\n    border: 0;\n    outline: 0;\n    cursor: pointer;\n    -webkit-transition: color .3s;\n    transition: color .3s;\n}\n.ant-modal-header {\n    padding: 16px 24px;\n    color: rgba(0,0,0,.65);\n    background: #fff;\n    border-bottom: 1px solid #e8e8e8;\n    border-radius: 4px 4px 0 0;\n}\n.ant-modal-body {\n    padding: 12px;\n    font-size: 14px;\n    line-height: 1.5;\n    word-wrap: break-word;\n}\n.ant-modal-body .carousel {\n    background-color: #d3d3d3;\n}\n\n.carousel.carousel-slider {\n    position: relative;\n    margin: 0;\n    overflow: hidden;\n}\n.carousel {\n    position: relative;\n    width: 100%;\n}\n.carousel .slider-wrapper {\n    overflow: hidden;\n    margin: auto;\n    width: 100%;\n    -webkit-transition: height .15s ease-in;\n    transition: height .15s ease-in;\n}\n\n.carousel * {\n    box-sizing: border-box;\n}\n\n.ant-modal-body .carousel ul.control-dots {\n    bottom: 0;\n}\n.ant-modal-body .carousel .control-dots {\n    margin: 0;\n}\n.carousel .control-arrow, .carousel.carousel-slider .control-arrow {\n  -webkit-transition: all 0.25s ease-in;\n  -moz-transition: all 0.25s ease-in;\n  -ms-transition: all 0.25s ease-in;\n  -o-transition: all 0.25s ease-in;\n  transition: all 0.25s ease-in;\n  opacity: 0.4;\n  filter: alpha(opacity=40);\n  position: absolute;\n  z-index: 2;\n  top: 20px;\n  background: none;\n  border: 0;\n  font-size: 32px;\n  cursor: pointer; }\n  .carousel .control-arrow:hover {\n    opacity: 1;\n    filter: alpha(opacity=100); }\n  .carousel .control-arrow:before, .carousel.carousel-slider .control-arrow:before {\n    margin: 0 5px;\n    display: inline-block;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n    content: ''; }\n  .carousel .control-disabled.control-arrow {\n    opacity: 0;\n    filter: alpha(opacity=0);\n    cursor: inherit;\n    display: none; }\n  .carousel .control-prev.control-arrow {\n    left: 0; }\n    .carousel .control-prev.control-arrow:before {\n      border-right: 8px solid #fff; }\n  .carousel .control-next.control-arrow {\n    right: 0; }\n    .carousel .control-next.control-arrow:before {\n      border-left: 8px solid #fff; }\n\n.carousel {\n  position: relative;\n  width: 100%; }\n  .carousel * {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box; }\n.carousel img {\n    width: 100%;\n    display: inline-block;\n   /* pointer-events: none;*/\n}\n  .carousel .carousel {\n    position: relative; }\n  .carousel .control-arrow {\n    outline: 0;\n    border: 0;\n    background: none;\n    top: 50%;\n    margin-top: -13px;\n    font-size: 18px; }\n  .carousel .thumbs-wrapper {\n    margin: 20px;\n    overflow: hidden; }\n  .carousel .thumbs {\n    -webkit-transition: all 0.15s ease-in;\n    -moz-transition: all 0.15s ease-in;\n    -ms-transition: all 0.15s ease-in;\n    -o-transition: all 0.15s ease-in;\n    transition: all 0.15s ease-in;\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    position: relative;\n    list-style: none;\n    white-space: nowrap; }\n  .carousel .thumb {\n    -webkit-transition: border 0.15s ease-in;\n    -moz-transition: border 0.15s ease-in;\n    -ms-transition: border 0.15s ease-in;\n    -o-transition: border 0.15s ease-in;\n    transition: border 0.15s ease-in;\n    display: inline-block;\n    width: 80px;\n    margin-right: 6px;\n    white-space: nowrap;\n    overflow: hidden;\n    border: 3px solid #fff;\n    padding: 2px; }\n    .carousel .thumb:focus {\n      border: 3px solid #ccc;\n      outline: none; }\n    .carousel .thumb.selected, .carousel .thumb:hover {\n      border: 3px solid #333; }\n    .carousel .thumb img {\n      vertical-align: top; }\n.carousel.carousel-slider {\n    position: relative;\n    margin: 0;\n    overflow: hidden;\n\tpadding-bottom: 20px;\n}\n    .carousel.carousel-slider .control-arrow {\n      top: 0;\n      color: #fff;\n      font-size: 26px;\n      bottom: 0;\n      margin-top: 0;\n      padding: 5px; }\n      .carousel.carousel-slider .control-arrow:hover {\n        background: rgba(0, 0, 0, 0.2); }\n  .carousel .slider-wrapper {\n    overflow: hidden;\n    margin: auto;\n    width: 100%;\n    -webkit-transition: height 0.15s ease-in;\n    -moz-transition: height 0.15s ease-in;\n    -ms-transition: height 0.15s ease-in;\n    -o-transition: height 0.15s ease-in;\n    transition: height 0.15s ease-in; }\n    .carousel .slider-wrapper.axis-horizontal .slider {\n      -ms-box-orient: horizontal;\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -moz-flex;\n      display: -webkit-flex;\n      display: flex; }\n      .carousel .slider-wrapper.axis-horizontal .slider .slide {\n        flex-direction: column;\n        flex-flow: column; }\n    .carousel .slider-wrapper.axis-vertical {\n      -ms-box-orient: horizontal;\n      display: -webkit-box;\n      display: -moz-box;\n      display: -ms-flexbox;\n      display: -moz-flex;\n      display: -webkit-flex;\n      display: flex; }\n      .carousel .slider-wrapper.axis-vertical .slider {\n        -webkit-flex-direction: column;\n        flex-direction: column; }\n  .carousel .slider {\n    margin: 0;\n    padding: 0;\n    position: relative;\n    list-style: none;\n    width: 100%; }\n    .carousel .slider.animated {\n      -webkit-transition: all 0.35s ease-in-out;\n      -moz-transition: all 0.35s ease-in-out;\n      -ms-transition: all 0.35s ease-in-out;\n      -o-transition: all 0.35s ease-in-out;\n      transition: all 0.35s ease-in-out; }\n  .carousel .slide {\n    min-width: 100%;\n    margin: 0;\n    position: relative;\n    text-align: center;\n    background: #000; }\n    .carousel .slide img {\n      width: 100%;\n      vertical-align: top;\n      border: 0; }\n    .carousel .slide iframe {\n      display: inline-block;\n      width: calc(100% - 80px);\n      margin: 0 40px 40px;\n      border: 0; }\n    .carousel .slide .legend {\n      -webkit-transition: all 0.5s ease-in-out;\n      -moz-transition: all 0.5s ease-in-out;\n      -ms-transition: all 0.5s ease-in-out;\n      -o-transition: all 0.5s ease-in-out;\n      transition: all 0.5s ease-in-out;\n      position: absolute;\n      bottom: 40px;\n      left: 50%;\n      margin-left: -45%;\n      width: 90%;\n      border-radius: 10px;\n      background: #000;\n      color: #fff;\n      padding: 10px;\n      font-size: 12px;\n      text-align: center;\n      opacity: 0.25;\n      -webkit-transition: opacity 0.35s ease-in-out;\n      -moz-transition: opacity 0.35s ease-in-out;\n      -ms-transition: opacity 0.35s ease-in-out;\n      -o-transition: opacity 0.35s ease-in-out;\n      transition: opacity 0.35s ease-in-out; }\n  .carousel .control-dots {\n    position: absolute;\n    bottom: 0;\n    margin: 10px 0;\n    text-align: center;\n    width: 100%; }\n    @media (min-width: 960px) {\n      .carousel .control-dots {\n        bottom: 0; } }\n    .carousel .control-dots .dot {\n      -webkit-transition: opacity 0.25s ease-in;\n      -moz-transition: opacity 0.25s ease-in;\n      -ms-transition: opacity 0.25s ease-in;\n      -o-transition: opacity 0.25s ease-in;\n      transition: opacity 0.25s ease-in;\n      opacity: 0.3;\n      filter: alpha(opacity=30);\n      box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.9);\n      background: #fff;\n      border-radius: 50%;\n      width: 8px;\n      height: 8px;\n      cursor: pointer;\n      display: inline-block;\n      margin: 0 8px; }\n      .carousel .control-dots .dot.selected, .carousel .control-dots .dot:hover {\n        opacity: 1;\n        filter: alpha(opacity=100); }\n  .carousel .carousel-status {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 5px;\n    font-size: 10px;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.9);\n    color: #fff; }\n.carousel:hover .slide .legend {\n    opacity: 1;\n}\n\n.slide {\n/*\n\tdisplay: none;\n*/\n}\n.slide.selected {\n/*\n\tdisplay: block;\n*/\n}\n\n \n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}